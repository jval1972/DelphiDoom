Fixed problem in wide status bar when changing screen resolution (software rendering).
Fixed problem in wide status bar when the menu shades the background (OpenGL rendering).
Corrections to external textures caching in software rendering mode.
Virtual filesystem places hi-res textures in 'TEXTURES' directory.
Wall textures can be loaded from pk3/zip filesystem without a TEXTUREx equivalent. They must be located inside "TEXTURES" folder.
Fixed problem with lump reading when a namespace was required.
Load flats in HI_START/HI_END namespace.
Support for TX_START/TX_END namespace.
It will load KVX voxels even if the ".kvx" extension is not defined in VOXELDEF.
Improved ZDoom compatiblility in VOXELDEF lumps.

Version 2.0.7 build 733 - (20220414)
-----------------------
Small optimizations to plane rendering (software mode).
Fixed missiles not exploding in lower textures with sky ceiling.
Speed optimizations to transparent sprite rendering (eg plasma shot).
Small speed optimizations to renderstyle Add & Subtract in 8 bit color mode.
Added SPIN field in VOXELDEF lumps, it compines DROPPEDSPIN & PLACEDSPIN behavior.
If depthbuffer is active will draw sprites from front to back to avoid overdraw.
Fixed some voxel glitches for voxels on a 3d floors.
Speed optimizations to slope software rendering.
Small optimizations to software depthbuffer.
Optimization to multithreading walls software rendering.
Uncapped framerate scales better in multi-core CPUs.
Added interpolatereducelag console variable. When set, it will try to reduce lag. Default is "false".
New menu for uncapped framerate (Options/Display/Advanced/Uncapped FrameRate).
More efficient segs clipping to speedup rendering of huge maps.
Added r_voxellightmapaccuracy console variable. Values are 0, 1 & 2 for low, normal & high accuracy. Default is 1. It can be set from the Lightmap menu.
Speed optimization to the software rendering lightmap.
Speed optimizations to voxel software rendering.
Improved uncapped framerate integrity and performance.
Proper windowed mode (Software & OpenGL).
The player can choose to use CAPS LOCK for autorun.
Statusbar stretch in widescreen. 
Added statusbarstretch console variable. It can be set from the Menu (Display/Advanced/Aspect Ratio).
The statusbar highlights the number 3 if you have the super shotgun but not the shotgun.

Version 2.0.7 build 732 - (20220318)
-----------------------
Fixed seg rendering in lines from (0, 0) point.

Version 2.0.7 build 731 - (20220317)
-----------------------
Added -pistolstart command line parameter.
Prepeare drawseg list in separate thread in software rendering.
Use general purpose threads in 8 bit software rendering blit.
Speed optimizations in R_PointToAngleEx().
Speed optimizations of big maps in software rendering.
Fixed misspelled of "joystick" in the menus.
Improved priority logic for sound channel selection.
Fixed UMAPINFO possible warning message when parsing multi-strings.
Better multithreading scaling in software mode (prepare clipping info for sprites & voxels).
Fixed crosshair drawing in OpenGL mode.
Added support for tall patches in PNG format.
More robust uncapped framerate.
Speed optimizations to the OpenGL rendering.
Fixes to 3d colissions of actors moving up or down other actors.
Default sound channels raised to 32, maximum sound channels raised to 64.
Key bindings for the AUTOMAP keys.
Improved multithreading handling in software rendering mode.
Added dotestactivethreads console variable, when it's set to true (default) the engine will tweak active threads without workload.

Version 2.0.7 build 730 - (20220302)
-----------------------
Fixed flags in A_ChangeVelocity() ACTORDEF function.
Export info tables to Pascal.
Added ExportInfoPascal, InfoExportPascal, ExportInfoPascalBI, InfoExportPascalBI, ExportInfoPascalBuiltIn & InfoExportPascalBuiltIn console commands.
Added SaveInfoPascal, InfoSavePascal, SaveInfoPascalBI, InfoSavePascalBI, SaveInfoPascalBuiltIn & InfoSavePascalBuiltIn console commands.
Added MF3_EX_ABSOLUTEDAMAGE mobj flag.
Added MF3_EX_NOGRAVITYDEATH mobj flag. When set, does not remove the MF_NOGRAVITY flag on death.
Fixed MF2_EX_CANTLEAVEFLOORPIC flag behaviour.
Removed generalized sector consts for forcefields.
Fixed uncapped framerate bug for floor & ceiling offsets.
Added "A_PlayerHurtExplode(damage: integer; radius: integer);" ACTORDEF function.
Added A_SetPushable() & A_UnSetPushable() ACTORDEF functions.
DEHACHED can use weapon & ammo mnemonic names.
ACTORDEF can override the existing weapons (WEAPON keyword).
Added DEH_PrintWeapondef & PrintWeapondef console commands, print current weapons as ACTORDEF script.
Added DEH_SaveWeapondef & SaveWeapondef console commands, save current weapons as ACTORDEF script.
Hold attack state for weapon refire.
Corrected ACTORDEF parsing of "goto" keyword at the end of the actor/weapon declaration.
Added MF3_EX_FREEZEDAMAGE & MF3_EX_NOFREEZEDAMAGE mobj flags.
Added MF3_EX_FREEZEDAMAGERESIST mobj flag. When true it takes half damage from MF3_EX_FREEZEDAMAGE missiles.
Added MF3_EX_FLAMEDAMAGE, MF3_EX_NOFLAMEDAMAGE & MF4_EX_FLAMEDAMAGERESIST mobj flags.
Added MF4_EX_THRUMONSTERS flag, does not collide with monsters.
Player crouching.
Key bindings menu now has 3 submenus.
Variable mobj painchance.
Added A_SetPainChance() ACTORDEF function.
Added GetActorPainChance() & SetActorPainChance() PascalScript functions.
ACTORDEF does not require the "Stop" keyword in states.
Can use SKY1 texture on other episodes if SKY2, SKY3 etc not found.
Added the TICRATE const in states parameters evaluation.
Added the LEVELTIME, GAMEEPISODE, GAMEMAP & LEVELNAME variables in states parameters evaluation.
Fixed glitch in large flats multithreading software rendering.
Fog sectors (lightlevel > 1000).
Fog strength can be configured individually for normal & white fog sectors (OpenGL).
Added GetSectorInterpolate() & SetSectorInterpolate() PascalScript functions.
Added GetSectorFog() & SetSectorFog() PascalScript functions. Added ::fog property in sector class.
Fixed Integer/float tolerance examines negative values in DEHACKED & ACTORDEF.
SpriteDX & SpriteDY mobj fields. Can be accessed by ACTORDEF & PascalScript.
Added A_SetSpriteDX & A_SetSpriteDY ACTORDEF function.
::spriteDX & ::spriteDY fields are available in ACTORDEF function parameters evaluation.
Added GetActorSpriteDX, SetActorSpriteDX, GetActorSpriteDY, SetActorSpriteDY, GetMobjInfoSpriteDX & GetMobjInfoSpriteDY Pascalscript functions.
Added ExportInfoPascalConstBI, InfoExportPascalConstBI, SaveInfoPascalConstBI, InfoSavePascalConstBI console commands. Save mobjinfo as Pascal const declaration.
Added ExportInfoPascalConst, InfoExportPascalConst, SaveInfoPascalConst, InfoSavePascalConst console commands. Save mobjinfo as Pascal const declaration.
Bug fix: Reset extra player fields when spawning player.
Added SXF_DROPPED/SIXF_DROPPED flag in A_SpawnItemXX ACTORDEF functions. Mark spawned items as MF_DROPPED. 
Improved hash efficiency for string evaluation in ACTORDEF function parameters.
Fixed behavior of A_CountdownArg() ACTORDEF function.
Added MF4_EX_ABSOLUTEDROPITEMPOS mobj flag. Spawns dropped item in actual z of the actor.
ACTORDEF can accept boolean values in quotes.
Added ACTORDEF functions to play predefined sounds:
 -A_SeeSound
 -A_PainSound
 -A_AttackSound
 -A_MeleeSound
 -A_DeathSound
 -A_ActiveSound
Distinct screenshot filenames for Chex Quest & Hacx.
Accurate MF3_EX_WALLBOUNCE mechanics.
Added "A_MatchTargetZ(zspeed: integer; threshold: integer; maxmomz: integer)" ACTORDEF function.
Added DEH_PrintStateOwners, PrintStateOwners, DEH_SaveStateOwners & SaveStateOwners console commands.
Fixed bug that could rarely cause infinite loop in DEHACKED lumps, also now recognizes correctly multiple SUBMITNEWFRAMES commands in DEHACKED.
Inherited actors do not hurt each other.
Green & blood color gibs.
r_fakecontrast console variable will add contrast to ALL perpendicular lines.
Added A_SimpleDialog(dialoglump1: string; dialoglump2..) ACTORDEF function.
Display correctly character #0 in end text.
Safe check for light columns in software rendering.
The "gameskill" can be accessed by ACTORDEF parameters evaluation.
Added check for vanilla E2M7 linedef flags.
Use the native monitor resolution as default in software rendering mode.
Faster and safer thread de-allocation.
Added A_TurretChase() ACTORDEF function.
Display items with various colors in automap cheat.
Display a crosshair. Can be turned on/off by the "drawcrosshair" console variable.
Fixed MF3_EX_NOBLOCKMONST flag behavior.
Fix gravity field inheritance in ACTORDEF declarations.
Added MF4_EX_CANNOTSTEP flag, actors with this flag can not step-up.
String evaluation in parameters of ACTORDEF functions.
Added MF4_EX_CANNOTDROPOFF flag, actors with this flag can not drop-off.
Use sound files in pk3 without WAD equivalent. Supported file formats are WAV, OGG, FLAC, OGA, AU, VOC & SND.
Speed optimizations to DD_IDE tool.
Infinite state cycle error message will display the actor's name.
Software rendering lights affect masked, sprites and voxels.
Master and tracer custom parameters are accessible by ACTORDEF functions. MASTERCUSTOMPARAM(), MASTERPARAM(), TRACERCUSTOMPARAM() & TRACERPARAM()
Force string evaluation in ACTORDEF function parameters with the EVAL function.
Added ACTORDEF functions:
 -A_SetMasterCustomParam(param: string, value: integer)
 -A_AddMasterCustomParam(param: string, value: integer)
 -A_SubtractMasterCustomParam(param: string, value: integer)
 -A_JumpIfMasterCustomParam(param: string, value: integer, offset: integer)
 -A_JumpIfMasterCustomParamLess(param: string, value: integer, offset: integer)
 -A_JumpIfMasterCustomParamGreater(param: string, value: integer, offset: integer)
 -A_GoToIfMasterCustomParam(param: string, value: integer, state: state_t)
 -A_GoToIfMasterCustomParamLess(param: string, value: integer, state: state_t)
 -A_GoToIfMasterCustomParamGreater(param: string, value: integer, state: state_t)
 -A_SetTracerCustomParam(param: string, value: integer)
 -A_AddTracerCustomParam(param: string, value: integer)
 -A_SubtractTracerCustomParam(param: string, value: integer)
 -A_JumpIfTracerCustomParam(param: string, value: integer, offset: integer)
 -A_JumpIfTracerCustomParamLess(param: string, value: integer, offset: integer)
 -A_JumpIfTracerCustomParamGreater(param: string, value: integer, offset: integer)
 -A_GoToIfTracerCustomParam(param: string, value: integer, state: state_t)
 -A_GoToIfTracerCustomParamLess(param: string, value: integer, state: state_t)
 -A_GoToIfTracerCustomParamGreater(param: string, value: integer, state: state_t)
Evalueate actor flags in ACTORDEF functions parameters with the FLAG() function.
A_JumpXXXX() ACTORDEF functions will recognize the RANDOM keyword for setting offset.
Actor evaluator can access player's mobj in weapon functions.
Ensure that the sprite names that are overwritten by the "TEXT" dehacked keyword are in uppercase.
Fixed angle field (#8) in A_SpawnItemEx(), also the field can be a floating point value.
Warning message in state parameters check displays actor message.
Added MF4_EX_FORCERADIUSDMG mobj flag. When set the bomb hurts actors with the MF_EX_NORADIUSDMG flag.
Added MF4_EX_SHORTMRANGE mobj flag. When set the actor does not fire missile in distance greater than 14 * 64 map units.
Added MF4_EX_DMGIGNORED mobj flag. When set the other actors ignore its attacks.
Added MF4_EX_HIGHERMPROB mobj flag. When set the actor has higher missile attack probability.
Added MF4_EX_RANGEHALF mobj flag. When set the actor use half distance for missile attack probability.
Added MF4_EX_NOTHRESHOLD mobj flag. When set the actor can target other actors without checking threshold.
Added MF4_EX_LONGMELEERANGE mobj flag. When set the actor has long melee range.
Added MF4_EX_RIP mobj flag. When set the projectile rips through targets.
Parse [SPRITES] DEHACKED/BEX extention.
Added MF4_EX_MAP07BOSS1 & MF4_EX_MAP07BOSS2 mobj flags.
Dynamic ceiling slope check correction.
3D floor logic corrections.
Auto fix interpolation for instant changes in sectors heights and texture offsets.
Added MF4_EX_E1M8BOSS, MF4_EX_E2M8BOSS, MF4_EX_E3M8BOSS, MF4_EX_E4M6BOSS & MF4_EX_E4M8BOSS mobj flags.
Read the NOCLIPPING line flag in UDMF maps.
Speed optimizations to the software rendering lights.
Added MF4_EX_SELFAPPLYINGLIGHT flag. When set, the lightmap in software rendering mode will apply the light to the emitter.
Added r_lightmaponemitters console variable. When set, the lightmap in software rendering mode will always the light to the emitter.
Added A_RipSound() & A_RandomoRipSound() ACTORDEF functions.
Added MF4_EX_FULLVOLRIP & MF4_EX_RANDOMRIPSOUND mobj flags.
Added full_sounds console variable. When true, the mobjs will finish their sounds when removed.
Added MF4_EX_ALWAYSFINISHSOUND & MF4_EX_NEVERFINISHSOUND mobj flags to overwrite the full_sounds console variable.
Always check the actor's instance flags, not its info flags.
Corrected software rendering lights clipping in 3d floors.
Added A_ChangeSpriteFlip(propability: integer) ACTORDEF function.
Infinite state cycle detection while moving player sprites.
Infightining group and mechanics.
Projectile group and mechanics.
Splash group and mechanics.
Added A_SpawnObject() ACTORDEF function (mbf21).
Added A_MonsterProjectile() ACTORDEF function (mbf21).
Added A_MonsterBulletAttack() ACTORDEF function (mbf21).
Added A_MonsterMeleeAttack() ACTORDEF function (mbf21).
Added A_RadiusDamage() ACTORDEF function (mbf21).
Added A_HealChase() ACTORDEF function (mbf21).
Added A_SeekTracer() ACTORDEF function (mbf21).
Added A_FindTracer() ACTORDEF function (mbf21).
Added A_ClearTracer() ACTORDEF function (mbf21).
Added A_JumpIfHealthBelow() ACTORDEF function (mbf21).
Added A_JumpIfTargetInSight() ACTORDEF function (mbf21).
Added A_JumpIfTargetCloser() ACTORDEF function (mbf21).
Added A_JumpIfTracerInSight() ACTORDEF function (mbf21).
Added A_JumpIfTracerCloserMBF21() ACTORDEF function (mbf21).
More persistent check while trying to adjust missing textures.
Added A_JumpIfFlagsSet() ACTORDEF function (mbf21).
Added A_AddFlags() ACTORDEF function (mbf21).
Added A_RemoveFlags() ACTORDEF function (mbf21).
Added A_WeaponProjectile() ACTORDEF function (mbf21).
Added A_WeaponBulletAttack() ACTORDEF function (mbf21).
Added A_WeaponMeleeAttack() ACTORDEF function (mbf21).
Added A_WeaponSound() ACTORDEF function (mbf21).
Added A_WeaponAlert() ACTORDEF function (mbf21).
Added A_WeaponJump() ACTORDEF function (mbf21).
Added A_ConsumeAmmo() ACTORDEF function (mbf21).
Added A_CheckAmmo() ACTORDEF function (mbf21).
Added A_RefireTo() ACTORDEF function (mbf21).
Added A_GunFlashTo() ACTORDEF function (mbf21).
Correctly initialize DEHEXTRA sounds.
Export ammo tokens in DEHACKED.
Use player mobjinfo meleerange field to determine player's melee range.
MF3_EX_NOCRUSH flag will set invulnerable an actor on crushing.
Don't gib in Chex Quest.
Added crush state for mobjs.
Added MF4_EX_DONTGIB mobj flag. Actors with this flag will not gib.
Fixed some glitches in voxel software rendering.
Support for the wait keyword in ACTORDEF.
Display warning message when a pk3 file can not be loaded.
DEATH_MASK for alternate damage to sectors (mbf21).
KILL_MONSTERS_MASK for mobj damage to sectors (mbf21).
Added line specials 1024, 1025 & 1026 (mbf21).
"ACTIVE SOUND" alias for "ACTION SOUND" DEHACKED field.
Fixed the MF2_EX_DONTRUNSCRIPTS flag in actors.
Optionally can draw the player's trace in automap.
Added MF4_EX_BACKINGMELEE flag. When set the actor will backup from melee attack.
Added A_SetProjectileGroup(group: string) ACTORDEF function.
Added A_SetInfightingGroup(group: string) ACTORDEF function.
Added A_SetSplashGroup(group: string) ACTORDEF function.
Accept DEH_ACTOR_xxx as a vaild actor alias.
Support for multipatch tall textures.
Allow CRxxxxxx colorregions outside CR_START, CR_END namespace.
"RADIUS" alias for "WIDTH" DEHACKED field.
Added CR_BLACK, CR_PURPL & CR_WHITE translation tables.
Blood color support (mbf21 specs).
Translation tables for things.
Added A_Delayfire(tics: integer = TICRATE) ACTORDEF function, delays player fire.
Added PascalScript functions to control blood color & translation:
 -GetActorTranslation(actor): string;
 -SetActorTranslation(actor, translation: string);
 -GetActorBloodColor(actor): string;
 -SetActorBloodColor(actor, bloodcolor: string);
Added 10 new translations CRTRANS0 thru CRTRANS9 for user defined translation lumps.
Added A_SetTranslation(trans: string) ACTORDEF function.
Added A_SetBloodColor(color: string) ACTORDEF function.
Fix some problems with player movement clipping when landing on other actors.
Emulates correctly the ripple effect in OpenGL mode.
Savepath for DOOM2F.WAD (French version).
XMI (Extended midi), CMF (Creative music file) & SOP (Sopepos) music support.
Brain final boss save/load consistancy. Also removed limit of only 32 boss spots.
Added A_BrainAwakeVanilla() & A_BrainSpitVanilla() ACTORDEF functions.
Use the carret ("^") instead of slash ("\") while searching for external textures for sprites (OpenGL).
The engine can use the zfloor & zceiling fields of vertexes in UDMF.
Support for the health and gravity fields of things in UDMF.
Correctly display the game mode in startup screen when the -iwad parameter is used.
Displays the game mode sooner in startup screen.
Process C lang style defines and conditions in custom content.
The default value of autoloadgwafiles console variable changed to false.
Added the #exitif conditianal directive in text content definition lumps.
Improved HACX support.
Recognizes IWAD file extention.
Added SetConsoleStr, SetConsoleInt & SetConsoleBool PascalScript functions to set console variables. The new value will not be saved to the ini file and it can only be retrived with the GetConsoleStr, GetConsoleInt & GetConsoleBool PascalScript functions.
Save/Load mechanism global changes to easily accomodate new fields additions.
Speed optimization to string manipulation routines.
UMAPINFO support.
Remember last skill level.
Small optimizations to the software voxel rendering.
Corrected flat scale in OpenGL mode.
Faster proccessing of include files.
Added #CVARFORCE directive. It can be placed in any text content and forces the value of a console variable to the value specified.
Detect 426x200 screens.
Added new PascalSccript functions to access the new SideDefs' fields:
 -function PS_GetSideTopTextureOffset(const sd: Integer): Integer;
 -procedure PS_SetSideTopTextureOffset(const sd: Integer; const offs: Integer);
 -function PS_GetSideBottomTextureOffset(const sd: Integer): Integer;
 -procedure PS_SetSideBottomTextureOffset(const sd: Integer; const offs: Integer);
 -function PS_GetSideMidTextureOffset(const sd: Integer): Integer;
 -procedure PS_SetSideMidTextureOffset(const sd: Integer; const offs: Integer);
 -function PS_GetSideTopRowOffset(const sd: Integer): Integer;
 -procedure PS_SetSideTopRowOffset(const sd: Integer; const offs: Integer);
 -function PS_GetSideBottomRowOffset(const sd: Integer): Integer;
 -procedure PS_SetSideBottomRowOffset(const sd: Integer; const offs: Integer);
 -function PS_GetSideMidRowOffset(const sd: Integer): Integer;
 -procedure PS_SetSideMidRowOffset(const sd: Integer; const offs: Integer);
Use 64 characters long string for short names in PK3.
426px wide assets support (Unity port IWADS).
Added "DROPPED ITEM" alias for "DROPITEM" DEHACKED field.
Added MF5_EX_PUSHWALL, MF5_EX_MCROSS, MF5_EX_IMPACT & MF5_EX_PCROSS mobj flags.
UMAPINFO custom field SKYTEXTURE2.
UMAPINFO custom field LIGHTNING.
Lightning special effect.
Added MT_MAPSPOT & MT_MAPSPOTGRAVITY actors.
Fix wrong coordinates check in sight check.
Interpolate only the sectors touched by the renderer in uncapped framerate.
Added #CREATEPALETTE directive. It can be placed in any text content and forces the engine to recreate PLAYPAL & COLORMAPS. You can specify a base pal as parameter.
Texture offsets can be set individually for top, bottom & middle textures of sidedefs.
Added "HIDDEN" UDMF sector property.
DEFAULTMISSILE in ACTORDEF will add the MF5_EX_IMPACT & MF5_EX_PCROSS mobj flags.
Fix of OPENARRAYOFU16 and OPENARRAYOFS16 declarations (PascalScript).
Fixed missileheight ACTORDEF export.
Added meleethreshold mobjinfo field.
Does not check CRC for grAb PNG chunk.
Added windthrust & windangle sector fields. They affect actors with the +WINDTHRUST flag.
More flexible Save/Load serialization to allow easier field additions and save space.
Moving Poly objects interpolation (uncapped framerate mode).
Added NOJUMP sector flag. When set it will prevent player jump in the sector.
Added interpolatepolyobjs console variable. When true (default) will interpolate polyobjs movement.
Rotating Poly objects interpolation (uncapped framerate mode).
Added NOJUMP option in UMAPINFO.
Added NOCROUCH sector flag. When set it will prevent player crouch in the sector.
Added NOCROUCH option in UMAPINFO.
Added 77 new PascalScript funtions to access UDMF line specials procs:
  -Ceiling_CrushAndRaise()
  -Ceiling_CrushRaiseAndStay()
  -Ceiling_CrushStop()
  -Ceiling_LowerAndCrush()
  -Ceiling_LowerByValue()
  -Ceiling_LowerByValueTimes8()
  -Ceiling_LowerToFloor()
  -Ceiling_LowerToHighestFloor()
  -Ceiling_LowerToLowest()
  -Ceiling_MoveToValueAndCrush()
  -Ceiling_MoveToValue()
  -Ceiling_MoveToValueTimes8()
  -Ceiling_RaiseByValue()
  -Ceiling_RaiseByValueTimes8()
  -Ceiling_RaiseToHighestFloor()
  -Door_Close()
  -Door_CloseWaitOpen()
  -Door_Open()
  -Door_Raise()
  -FloorAndCeiling_LowerByValue()
  -FloorAndCeiling_LowerRaise()
  -FloorAndCeiling_RaiseByValue()
  -Floor_CrushStop()
  -Floor_LowerByValue()
  -Floor_LowerByValueTimes8()
  -Floor_LowerToHighest()
  -Floor_LowerToLowestCeiling()
  -Floor_LowerToLowest()
  -Floor_LowerToNearest()
  -Floor_MoveToValue()
  -Floor_MoveToValueTimes8()
  -Floor_RaiseAndCrushDoom()
  -Floor_RaiseAndCrush()
  -Floor_RaiseByTexture()
  -Floor_RaiseByValue()
  -Floor_RaiseByValueTimes8()
  -Floor_RaiseInstant()
  -Floor_LowerInstant()
  -Floor_RaiseToCeilingNoChange()
  -Floor_RaiseToHighest()
  -Floor_RaiseToLowestCeiling()
  -Floor_RaiseToNearest()
  -Floor_ToCeilingInstantNoChange()
  -Floor_Waggle()
  -Light_ChangeToValue()
  -Light_Fade()
  -Light_Flicker()
  -Light_ForceLightning()
  -Light_ForceLightningTics()
  -Light_Glow()
  -Light_LowerByValue()
  -Light_MaxNeighbor()
  -Light_MinNeighbor()
  -Light_RaiseByValue()
  -Light_Strobe()
  -Light_StrobeDoom()
  -Pillar_BuildAndCrush()
  -Pillar_Build()
  -Pillar_Open()
  -Plat_DownByValue()
  -Plat_DownWaitUpStay()
  -Plat_DownWaitUpStayLip()
  -Plat_PerpetualRaise()
  -Plat_PerpetualRaiseLip()
  -Plat_UpByValue()
  -Plat_UpNearestWaitDownStay ()
  -Plat_UpWaitDownStay()
  -Polyobj_DoorSlide()
  -Polyobj_DoorSwing()
  -Polyobj_Move()
  -Polyobj_MoveTimes8()
  -Polyobj_OR_Move()
  -Polyobj_OR_MoveTimes8()
  -Polyobj_OR_RotateLeft()
  -Polyobj_OR_RotateRight()
  -Polyobj_RotateLeft()
  -Polyobj_RotateRight()
Added option to use legacy midi playback (snd_uselegacymidiplayer default).
Added -uselegacymidiplayer & -nouselegacymidiplayer command line parameters.
Added -internalmidiplayer command line parameter.
Improved midi playback.
Max light source distance increased from 2048px to 8192px in software rendering.
Small optimizations to sprite rendering.
Fixed masked middle texture bleeding when player was exactly placed on the line.
Small optimization to masked middle textute software rendering.
Bosses will have only seesound and deathsound at full volume by default.

Version 2.0.6 build 729 - (20211011)
-----------------------
Allow MODELDEF declarations without texture.
Added MOD, S3M, IT & XM track music format support.
Shows an I_DevWarning if sound channel can not be found.
Fixed potential doublicate mobj key while loading saved game.
Overlay functions as mobj codepointers:
  - A_OverlayClear;
  - A_OverlayDrawPatch(ticks: Integer; patchname: string; x, y: Integer);
  - A_OverlayDrawPatchStretched(ticks: Integer; patchname: string; x1, y1, x2, y2: Integer);
  - A_OverlayDrawPixel(ticks: Integer; red, green, blue: byte; x, y: Integer);
  - A_OverlayDrawRect(ticks: Integer; red, green, blue: byte; x1, y1, x2, y2: Integer);
  - A_OverlayDrawLine(ticks: Integer; red, green, blue: byte; x1, y1, x2, y2: Integer);
  - A_OverlayDrawText(ticks: Integer; txt: string; align: Integer; x, y: Integer);
  - A_OverlayDrawLeftText(ticks: Integer; txt: string; x, y: Integer);
  - A_OverlayDrawRightText(ticks: Integer; txt: string; x, y: Integer);
  - A_OverlayDrawCenterText(ticks: Integer; txt: string; x, y: Integer);
Bug fix: Does not load twice default state names in case of missing STATEDEF lump.
Fixed UTF16 loading problem.
Fixed ddmodel rendering when the game is paused.
Holds up to 2047 bytes for enviroment variables (eg DOOMWADPATH).
Added r_blitmultiplier console variable. Default value is 1. Higher values can correct choppy look when interpolation is disabled but with performance penalty.
Fixed potential memory corruption problem in R_MakeSpans().
Support for "IDFA Armor" & "IDFA Armor Class" names in Dehacked.
Support for "IDKFA Armor" & "IDKFA Armor Class" names in Dehacked.
Support for "MAX SOULSPHERE" name in Dehacked.
Friction field in ACTORDEF & Dehacked.
Added A_SetFriction() ACTORDEF function.
Friction available in PascalScript. Added GetActorFriction(), SetActorFriction() & GetMobjInfoFriction PascalScript functions.
FastMM upgrated to ver. 4.993.
Bug fix: Corrected potential issue while loading text files.
Corrected transparent voxel & sprite rendering in invulnerability mode.
Added uselightboostgodmode console variable. When true (default) the glow lights are drawned in invulnerability mode. 
ZDoom compatibility constants for A_SpawnItemEx() & A_CustomMissile() ACTORDEF functions.
Actor friction is available in ACTORDEF functions parameters.
When sliding a wall it will take into acount the "maxstepheight" property to decide if it can pass.

Version 2.0.6 build 728 - (20210219)
-----------------------
Fixed diskbuzy height calculation in OpenGL mode. (Could crash the engine in case of a missing diskbuzy patch from WAD)
Fixed memory corruption problem in I_ReverseScreen().
Corrected lump name character case for runtime loading.
Changed traverse order of mobjinfo table.
Easyslope item to easily create slopes.
Support for flats up to 4096x4096 px.
FLATINFO lump with information regarding flat definitions.
Fixed bug in erronous width & height screen dimentions input when the -geom command line parameter is specified.
Speed improvements in maps with high number of slopes.
Optimizations to slope rendering in sofware mode.
Corrections to Doom patch detection algorithm.
Now can theoretically handle maps up to 65536x65536 px.
Fixed serious bug while deallocating thinkers.
Fixed problem with dehacked file loading (-deh parameter).
Key bindings can now accept SHIFT & CTRL.
Floor and ceiling texture rotation.
Displays a warning if no player start found.
Screenshot in Save/Load menu.
PascalScript can access keyboard, mouse keys and joystick keys. The feature is intentionally dormant in demo recording/playback and in netgame.
Added Overlay.DrawRect & OverlayDrawRect PascalScript functions. params -> (const ticks: Integer; const red, green, blue: byte; const x1, y1, x2, y2: Integer)
Added overlaydrawrect console command. Usage is overlaydrawrect [ticks] [x1] [y1] [x2] [y2] [red] [green] [blue].
Dynamic slopes controled by PascalScript. (SetFloorSlope & SetCeilingSlope functions).
Floor texture offsets are displayed in textured automap.
Added A_CheckFloor & A_CheckCeiling ACTORDEF functions.
Added A_StopSound ACTORDEF function.
Added A_JumpIfTargetOutsideMeleeRange & A_JumpIfTargetInsideMeleeRange ACTORDEF functions.
Added A_JumpIfTracerCloser ACTORDEF function.
Save target & tracer in saved games.
Mass, args and special fields for mobjs.
Added MF3_EX_NORENDERINTERPOLATION mobj flag. When set to true, the renderer does not interpolate the mobj.
A lot of new ACTORDEF functions to improve ZDoom compatibility:
  - A_SetMass(mass: integer)
  - A_SetTargetMass(mass: integer)
  - A_SetTracerMass(mass: integer)
  - A_SetMasterMass(mass: integer)
  - A_CheckSight(offset: integer)
  - A_CheckSightOrRange(distance: float, offset: integer, [twodi: boolean=false])
  - A_CheckRange(distance: float, offset: integer, [twodi: boolean=false])
  - A_CountdownArg(arg: integer, offset: integer)
  - A_SetArg(arg: integer, value: integer)
  - A_SetSpecial(special: integer, [arg1, arg2, arg3, arg4, arg5: integer])
  - A_CheckFlag(flag: string, offset: integer, [aaprt: AAPTR])
  - A_SetAngle(angle: integer, [flags: integer], [aaprt: AAPTR])
  - A_SetUserVar(varname: string, value: integer)
  - A_SetUserArray(varname: string, index: integer, value: integer)
  - A_SetTics(tics: integer)
  - A_DropItem(spawntype: string, amount: integer, chance: integer)
  - A_DamageSelf(actor: Pmobj_t)
  - A_DamageTarget(const damage: integer)
  - A_DamageTracer(const damage: integer)
  - A_DamageMaster(const damage: integer)
  - A_KillTarget
  - A_KillTracer
  - A_KillMaster
  - A_RemoveTarget([flags: integer])
  - A_RemoveTracer([flags: integer])
  - A_Remove(aaprt: AAPTR, [flags: integer])
  - A_SetFloatBobPhase(bob: integer)
  - A_Detonate
  - A_Mushroom
  - A_BetaSkullAttack
  - A_CustomMeleeAttack
  - A_CustomComboAttack
  - A_SetRenderStyle
  - A_FadeTo
  - A_SetSize
  - A_RaiseMaster
  - A_RaiseChildren
  - A_RaiseSiblings
  - A_HealThing
  - A_RemoveMaster
  - A_BasicAttack
  - A_SetMasterArg(arg: integer; value: integer)
  - A_SetTargetArg(arg: integer; value: integer)
  - A_SetTracerArg(arg: integer; value: integer)
  - A_Tracer2
  - A_MonsterRefire(prob: integer, offset: state_t)
  - A_RearrangePointers(ptr_target: integer, ptr_master: integer, ptr_tracer: integer, flags: integer)
  - A_TransferPointer(ptr_source: integer, ptr_recipient: integer, ptr_sourcefield: integer, [ptr_recipientfield: integer], [flags: integer])
  - A_AlertMonsters(maxdist: integer, flags: integer)
  - A_RemoveChildren([flags: integer])
  - A_RemoveSiblings([flags: integer])
  - A_KillChildren
  - A_KillSiblings
  - A_Weave(xyspeed: integer, zspeed: integer, xydist: float, zdist: float)
Support for DEHEXTRA.
Multiple DEHACKED files inside WAD and PK3.
DEHACKED export will add a comment with command line parameters.
No delay to return to desktop when finished.
Extra sounds for Dehacked FRE000-FREE199 (indexed at 500-699).
Does not play menu sound on end screen.
Corrected DEHACKED export to ACTORDEF (renderstyle field).
Added A_Spawn, A_Face, A_Scratch, A_RandomJump & A_LineEffect functions.
Fixed DEHEXTRA/DEHACKED conflict with demo playback.
Avoid crash in OpenGL mode if sprite frames are missing.
Added new flag MF3_EX_FLIPSPRITE, when set it flips the mobj sprite.
ACTORDEF functions for flipping sprite: A_FlipSprite(), A_NoFlipSprite(), A_RandomFlipSprite() &A_RandomNoFlipSprite().
Support for various sound file formats using libsndfile, libflac, libvorbis & libogg.
Added Overlay.DrawLine & OverlayDrawLine PascalScript functions. params -> (const ticks: Integer; const red, green, blue: byte; const x1, y1, x2, y2: Integer)
Added overlaydrawline console command. Usage is overlaydrawline [ticks] [x1] [y1] [x2] [y2] [red] [green] [blue].
Fixed problem with Overlay display after changing screen dimentions.
Added overlaydrawpatch console command, usage is "overlaydrawpatch [ticks] [x] [y] [patch]".
Added Overlay.DrawPatchStretched & OverlayDrawPatchStretched PascalScript functions. params -> (const ticks: Integer; const patchname: string; const x1, y1, x2, y2: Integer)
Added overlaydrawpatchstretched console command. Usage is overlaydrawpatchstretched [ticks] [x1] [y1] [x2] [y2] [patch].
Boom generalized lines constants available in PascalScript.
Default jump key is "E" (WASD).
Added MF3_EX_MISSILEMORE & MF3_EX_MISSILEEVENMORE mobj flags.
Added minmissilechance mobjinfo field.
MAXCEILINGS changed to 128 from 30.
Improved vanilla demo compatibility.
Check overflow of animated lines. (limit is 1024).
Improved vanilla demo playback compatibility.
Save elevator data to saved game.
Fixed potential memory corruption problem when allocating custom colormaps.
Intermission screen graphics load consistancy.
Check for 1-sided lines as doors.
Sound org of sfx_oof sound when trying to open a locked door with key is the player.
If the wrong side of door is pushed, play the sfx_oof sound.
Check if a door is actually a door in T_VerticaDoor.
Added floatspeed, normalspeed & fastspeed mobjinfo fields.
A_Jump() ACTORDEF function can take multiple labels as parameters.
A_JumpIf() ACTORDEF function can take multiple labels as parameters.
Added obituaries and gender to mobjinfo fields.
Default value of "gldefs_as_lightdef" console variable changed to true.
Added decorate_as_actordef console variable, default value is true.
Added MeleeRange mobjinfo field.
Added MF3_EX_STRIFEDAMAGE mobj flag.
Added MF3_EX_MELEECHECKZ mobj flag, when set checks z values for melee attack.
Corrected A_PlayerMessage bug.
Dehacked parsing speed optimizations.
gldefs_as_lightdef & decorate_as_actordef can be configured from the Compatibility Menu. Needs restart for the changes to take effect.
show_obituaries console variable can be configured from the Menu (Option/Display/Appearence).
Added MF3_EX_NOTIMEFREEZE mobj flag. When it's set, the actor continues on freeze console command.
Added MF3_EX_CAUSEFEAR & MF3_EX_NOFEAR flags.
Added MF3_EX_SLIDE mobj flag.
Added MF3_EX_THRUACTORS mobj flag, no actor collision.
Added MF3_EX_THRUSPECIES mobj flag, no collision with same species (also inheritance).
Added MF3_EX_NOBLOCKMONST mobj flag, mobj can cross ML_BLOCKMONSTERS lines.
Green and blood blood for vanilla monsters, can be configured with the p_confcoloredblood console variable.
Fixed map title bug for maps outside the range of standard names.
Added MF3_EX_NOTAUTOAIMED mobj flag, do not subject actor to player autoaim.
Added maxstepheight & maxdropoffheight mobjinfo fields.
Added A_SinglePainAttack() & A_DualPainAttack() ACTORDEF functions.
Added GibHealth mobjinfo field.
Added MaxTargetRange mobjinfo field.
Added A_Quake() & A_LocalEarthQuake() ACTORDEF functions.
Doom2 BFG correction - For missing level MAP33 but with secret exit in MAP02.
Savegame directories depending on IWAD/PWAD.
Added GetActorWeaveIndexXY, SetActorWeaveIndexXY, GetActorWeaveIndexZ, SetActorWeaveIndexZ, GetMobjInfoWeaveIndexXY & GetMobjInfoWeaveIndexZ PascalScript functions.
Added A_SetWeaveIndexXY(), A_SetWeaveIndexZ() & A_SetWeaveIndexes ACTORDEF functions.
Added A_SetHeight() ACTORDEF function.

Version 2.0.5 build 727 - (4/12/2020)
-----------------------
Corrections to ACTORDEF export procedure.
Run earthquake effect code only when needed.
Fixes to 3d floors drawing in software rendering mode.
RandomRange() function in PascalScript.
Support for ANIMDEFS lump.
Line specials 291 & 292, set floor and ceiling texture offsets.
Prevent crash in lines with invalid sides.
Corrected issues with voxel clipping.
Fixed problems when installed in a directory that it's name contained spaces.
Added -mididevice command line parameter.
Added MF3_EX_BLOODIGNOREDAMAGE mobj flag.
Dehacked export saves the state name as comment.
Dehacked "NEXT FRAME" keyword will accept global state names as value.
Custom ACTORDEF labels can be accessed with [mobjname]::[label] by dehacked fields and other actions involving state names.
Added A_ChangeFlag ACTORDEF function.
Added PrintActordef console command alias for DEH_PrintActordef.
Added SaveActordef console command alias for DEH_SaveActordef.
Small improvements to multithreading tasks.
Corrected dehacked parsing of the "CODEP FRAME" keyword.
Prevent infinite loop for erronous A_Chase() placement.

Version 2.0.5 build 726 - (8/5/2020)
-----------------------
Fixed ACTORDEF parsing fail with RANDOM function.
Fixed typo in camera menu.
Z-buffer warnings are displayed only in debug mode.
Avoid crash in P_RecursiveSound when line has false ML_TWOSIDED flag.
Secret area message on BOOM secret masked sectors.
Added A_TraceNearestPlayer() ACTORDEF function.
Ignore illegal characters from content definition lumps.
True 3d collisions for players.
Warning when include file not found in content definition lumps.
Fixed include files depth detection.
Zero mass warning fix.
Added dd_getactordef_xxxx export functions in script DLL.
I_Error in TEvalFunction.Value() function displays function name.
Warning in TEvalFunction.Value() function displays function name.
Fixed FRANDOM parameters parsing.
ACTORDEF parsing improvements.
The engine detects missing sprite frames and displays warning.
Summon and Spawnmobj console commands refuze to work during demo playback/recording and when we have a net game.
Avoid repeating I_Warning messages when a state has errors in parameter list.
Lightmap cast light to slopes.
Fixed interpolation problem: Didn't interpolated player position and angle.

Version 2.0.5 build 725 - (30/3/2020)
-----------------------
Smoother interpolation in uncapped framerate.
Added DEH_PrintActordef command, print current mobjinfo as ACTORDEF declaration.
Added DEH_SaveActordef command, save current mobjinfo as ACTORDEF file definition.
More flexible flags parsing in ACTORDEF lumps. Will recognize +MF_***, +MF_EX_*** etc syntax.
Added MF3_EX_NOMAXMOVE mobj flag, when set it will not limit momx & momy to 30 map units per tic (original behaviour).
Added angle extra parameter to A_ThrustXY ACTORDEF function
States can have random tics in ACTORDEF lumps.

Version 2.0.5 build 724 - (8/3/2020)
-----------------------
Fixed bug that could crash the engine while spawning map things.
Fixed texture cache bug that could crash the engine (texture height was set to zero).
Fixed bug that could crash the engine when MAPS without nodes are stored in continous lumps inside WAD.
Fixed bug while spawning dropped items.
Fix SKULL attack when PASSOBJ flag is set
Added FLOORBOUNCE, CEILINGBOUNCE and WALLBOUNCE mobj flags.
Added new ACTORDEF functions to set the new bouncing flags:
 -A_SetFloorBounce
 -A_UnSetFloorBounce
 -A_SetCeilingBounce
 -A_UnSetCeilingBounce
 -A_SetWallBounce
 -A_UnSetWallBounce

Version 2.0.5 build 723 - (19/2/2020)
-----------------------
Added -blockmap command line parameter. When set it will force to generate blockmap while loading a map.
Added check to avoid crash in linedefs without front side.
Fixes to slope drawing in big maps (software renderer).
Added summon console command.

Version 2.0.5 build 722 - (2/2/2020)
-----------------------
Fixes to uncapped framerate calculation, runs smoother.
Change the interpolateoncapped console variable from the menu (Options/Display/Advanced/Interpolate on capped)
Added interpolateprecise console variable. When true it will try to make more accurate interpolation in uncapped framerate by taking by accound the time needed to render the frame.

Version 2.0.5 build 721 - (31/1/2020)
-----------------------
Added VSpeed and PushFactor fields to the mobjinfo PascalScript runtime class.
New ACTORDEF functions:
  A_Recoil
  A_SetSolid
  A_UnSetSolid
  A_SetFloat
  A_UnSetFloat
  A_SetHealth
  A_ResetTargetHealth
  A_SetTargetHealth
Mouse sensitivity for X & Y mouses axis can be configured thru the menus (Controls/Mouse sensitivity).
Added option for textured menu background.
Added menubackgroundflat console variable.
In multithreading mode the visplanes initialization is done in a separate thread while running the logic to improve performance (software renderer).
Added -keyboardmode command line parameter. Usage is: 
  1) "-keyboardmode ARROWS" -> use arrows to navigate
  2) "-keyboardmode WASD" -> use WASD to navigate
  3) "-keyboardmode ESDF" -> use ESDF to navigate
Key bindings menu to customize keyboard player control.
Menu beautificiations.
Support for DOOMWADPATH enviroment variable.
Search for installed steam applications to find wad files.
Openings are dynamically allocated, depending on screen resolution.
Screen resolution can be changed from the menu.
Intermission screens are displayed with correct aspect ratio when the "widescreensupport" console variable is set to true.
Automap fixes: 
 -Marks are displayed correctly. 
 -In OpenGL mode uses hardware acceleration to draw the automap instead of using the same code with software rendering version.
 -Fixed automap grid rotation.
 -Added automapgrid console variable.
Support for the C-style #include and Pascal-style {$INCLUDE} directives inside all content definition lumps (ACTORDEF, MODELDEF, VOXELDEF?, LIGHTDEF & SNDINFO). 
 -Recoursive include calls are detected to avoid infinite loop.
 -Maximum include depth set to 32. 
 -Also added support the #include_all and {$INCLUDE_ALL} directives, that parse all the pk3 entries with the same name.
Added png screenshot format (default). The mirrorjpgsshot console variable is set to false by default. It can be changed from the menu (Options/System)
Fullscreen menu item moved from Options/Display Options/Advanced to Options/Detail/Set Video Mode menu.
Added Ascpect Ratio & Camera menus (Display Options/Advanced).
Fixed bug with string to float convertion when the system's decimal separator was comma.
Will recognize the '+CANPASS' alias for 'PASSMOBJ' flag in ACTORDEF definitions (as well as 'CANPASS').
Will load kvx voxels from pk3/zip/pak files without the kvx extention, if they are placed inside voxels\*. directory
Corrected the behaviour of Actordef keyword "replaces".
In ACTORDEF lumps when a flag specified with the "-" character, it will be removed from the actor declaration (usefull with inherited objects)
"Funny rotations" generate an I_Warning, not an I_Error.
When entering ENDOOM screen, stops the music.
ENDOOM screen in OpenGL branch.
Wipe effect in OpenGL branch.
Support for renderstyle ADD & renderstyle SUBTRACT. The new renderstyles can be defined in ACTOR (BEX/ACTORDEF) definitions.
Speed optimizations to 8 bit color mode by using more CPU threads in final step (blit to the screen buffer).
Added new actor flag MF2_EX_SEEINVISIBLE, when set allows monsters to clearly see invisible player. 
Added the "ACTORALIAS" ACTORDEF command, defines actor name aliases. Usage is: ACTORALIAS name1 name2.
Added the "DEH_PARSE" & "DEH_PARSE_ALL" ACTORDEF commands, will parse the specified dehacked/bex file. Usage is DEH_PARSE/DEH_PARSE_ALL file1 [file2 ....].
Added new actor flag MF2_EX_MISSILEHURTSPECIES, when set, the actor can hurt with missile attack actors of the same species.
Added showmessageboxonmodified console variable. When set to true and a modified game is detected, there will be displayed a messagebox. Default is FALSE.
Added DEH_SaveMobjInfoCSV console command. Save the current mobjinfo table in a csv file.
Fixed music volume control. Now changing the music volume does not affect the sxf volume.
Fixed non working plats & ceilings (thanks to slayermbm - https://www.doomworld.com/forum/topic/98789-fpcdoom-1124117-updated-dec-2-2019/?do=findComment&comment=2050845)
Added showfullhdlogo console variable. When set to true and current display mode is 1920x1080 displays the FullDH logo on TITLE screen. Default is FALSE.
File system will process WAD files inside pk3/zip/pak files.
Will parse GLDEFS lumps/pk3 entries for dynamic light definitions (alongside with LIGHTDEF) if the gldefs_as_lightdef console variable is set to true.
Added scale ACTOR field in ACTORDEF lumps. 
Corrected enemies that continued shooting at you, even when out of sight - reported by slayermbm (https://www.doomworld.com/forum/topic/92113-delphidoom-204720-updated-oct-12-2019/?do=findComment&comment=2051252)
Fixed transparency in 8 bit color mode - reported by GRAU (https://www.doomworld.com/forum/topic/92113-delphidoom-204720-updated-oct-12-2019/?do=findComment&comment=2051725)
Default keyboard player movement changed to WASD.
Key bindings for weapon change as suggested by Khorus.
Change OpenGL texture filtering from the menu.
Change the OpenGL voxel optimization method from the menu.
Fixed problems with A_SpawnItem & A_SpawnItemEx actordef functions.
Added A_ScaleVelocity & A_ChangeVelocity ACTORDEF functions.
Added FloatRandom function in parameters of ACTORDEF functions. Usage is FloatRandom(1.5, 2.5) <-- return a float value between 1.5 and 2.5.
Bug fix: Players can now spawned on 3d floors when the "On middle Floor" flag is set.
Bug fix: Solved issue with A_SpawnItem & A_SpawnItemEx in sectors with 3d floors.
Eliminated problems with voxel frames without a corresponding sprite in the wad.
Fixed problem with KVX voxels in software rendering mode.
Eliminated problems with transparent drawing when the software renderer activates dephtbuffer (3d floors).
Changed mirrorjpgsshot console variable default value to false.
Corrected color overflow in renderstyle add (32 bit color software rendering).
Shared or exclusive fullscreen mode (as suggested by @khorus).
Function parameters in ACTORDEF evaluate expressions using C style operators.
  Supported operators:
     +, -, *, /, |, &, ^
  Supported functions:
  // Math Functions
     ABS MIN MAX EXP LOG LOG10 LOG2 CEIL FLOOR ROUND TRUNC INT SQR SQRT FRAC POWER
  // Trigonometry Functions
     SIN COS TAN ASIN ACOS ATAN SINH COSH TANH ATAN2 VECTORANGLE
  // Flow
     IF(bool condition; whentrue; whenfalse) IFF (alias for IF)
  // Random functions
     RAND RANDOM RANDOM2 FLOATRANDOM FRANDOM (alias for FLOATRANDOM) RANDOMPICK FRANDOMPICK SYSRAND(uses random seed from system's clock)
  // Actor position and movement
     X Y Z MOMX VELX MOMY VELY MOMZ VELZ FLOORZ CEILINGZ ANGLE
  // Actor properties
     RADIUS HEIGHT ALPHA HEALTH REACTIONTIME THRESHOLD FASTCHASETICS KEY (Unique mobj key) FLOORCLIP
  // Pascalscript map & world variables (PascalScript communication)
     MAPSTR WORLDSTR MAPINT WORLDINT MAPFLOAT WORLDFLOAT
  // Custom params (Custom integer variables on per instance basis)
     CUSTOMPARAM PARAM TARGETCUSTOMPARAM TARGETPARAM
  // States
     SPAWN SEE MELEE MISSILE PAIN DEATH XDEATH HEAL CRASH INTERACT (Doom and Strife branch only) RAISE
Added "freeze" console command, freezes the game, stop all thinkers, stop all scripts. Allow only the players to move. It has no effect while demo playback/record.
Added A_JumpIf ACTORDEF function.
Dynamic lights in software rendering (using LIGHTDEF lump).
Indivitual entries in the defaults file for OpenGL & software screen size.
Added r_uselightmaps, lightmapcolorintensity and lightwidthfactor console variables.
If an unknown map thing is detected it will not exit with I_Error, it will generate a warning instead and will spawn a questionmark.
Support for MUSINFO lump. 
Added DONTSPLASH alias for NOHITFLOOR flag.
Added -noactordef command line parameter, when you run with this parameter it will not parse ACTORDEF lumps.
Support for fullscreen patches with resolution greater than 320x200.
Support for tall sprites.
Added 'INITIAL BULLETS' and 'BFG CELLS/SHOT' dehacked fields.
PUSHFACTOR, SCALE and GRAVITY fields for actor instances. 
 PascalScript new functions:
  - PS_GetActorPushFactor & PS_SetActorPushFactor
  - PS_GetActorScale & PS_SetActorScale
  - PS_GetActorGravity & PS_SetActorGravity
 ACTORDEF evaluates in function parameters the fields pushfactor, scale and gravity.
 ACTORDEF new functions:
  - A_SetPushFactor
  - A_SetScale
  - A_SetGravity
Added r_lightmapfadeoutfunc console variable, change the fadeout function of software dynamic lights (linear, curved, persist, cosine and sigmoid). Can be set from the menu (Options/Display/Advanced/Lightmap).
Added r_bltasync console variable, when true (default) it will blit the frame to the DirectDrawBuffer asynchronously (software renderer). Can be configured from the Menu (Options/Display/Advanced)
Added DEH_SaveStatesCSV and BEX_SaveStatesCSV console commands, save states information to a csv file.
Added DEH_SaveSpritesCSV and BEX_SaveSpritesCSV console commands, save sprite names to a csv file.
Light definitions inside LIGHTDEF lump will overwrite previous light declarations.
Added r_generatespritesfromvoxels console variable. When true (default) it will generate sprites for voxels without a corresponding sprite.
Added allowvanillademos console variable, when true (default) will play vanilla demos. 
Added VANILLA_DEMO_OFF directive. It can be placed in ACTORDEF, MODELDEF, VOXELDEF?, LIGHTDEF & SNDINFO lumps and will prevent the engine to play vanilla demos. The setting is not preserved in defaults file and the modders should use this if their mod breaks vanilla demo compatibility.
Fixed uncapped framerate glitch in teleporting monsters.
LIGHTDEF lumps now define lights in a per actor basis and not in a per sprite bases. 
Fixed clipping problems on voxels and models in OpenGL mode.
Support for Doom2 BFG Edition.
Added r_fakecontrast console variable. When true (default) it will add contrast to perpendicular lines.
Speed optimizations to the upcapped framerate subsystem by processing only the mobjs that the renderer touched.
Texture width is not requiered to be power of 2 (software rendering).
Corrected issues with tall textures in OpenGL rendering.
Added interpolateoncapped console variable. It will smooth display in capped framerate. Default is true.
Fixed glitch in sky drawing, it was ignoring visplanes with 1 px height.
Fixed some glitches with high walls in software rendering.
Support for line specials 271 & 272 (transfer sky).
Dehacked strings will change sprite names. Strings must have length of 4 characters.
If an unknown texture is found in SWITCHES lump will not exit with I_Error, it will generate a warning message instead.
Support for MBF dogs.
Added dogs and dog_jumping console variables.
Added MF2_EX_FRIEND flag (friendly monsters).
Fixed ghost bug of ressurected bodies.
Masked textures can have columns without patches.
WASD keyboard preset uses the "E" key for jumping.
Support for tall textures in software rendering.
Added MF2_EX_JUMPUP flag. When set the actor will often (about 92% chance) decide to jump up (up to 56 units) to pursue target. Default for friendly monsters.
Support for extended help screens (HELP01 thru HELP99). See also https://www.doomworld.com/forum/topic/111465-boom-extended-help-screens-an-undocumented-feature/
Automap can now handle big maps without glitches.
Speed optimizations to the OpenGL renderer.
Fixed some glitches of the OpenGL rendering.
Added MF2_EX_DONTBLOCKPLAYER flag, when set a solid object does not block players.
Fixes to 3d gameplay.

Version 2.0.4 build 720 - (12/10/2019)
-----------------------
Now recornizes kvx voxels inside the VX_START/VX_END namespace.
Added vox_exportlightmap console command (OpenGL version only). Exports the current lightmap into a ddvox voxel.
Limit OpenGL framerate to monitor refresh rate is now preserved and executed correctly from defaults.
Lower memory utilization for OpenGL renderer (visplane declaration does not include the unneeded for the gl renderer visindex arrays).
Added 'CANPASS' alias for 'PASSMOBJ' flag in ACTORDEF definitions.
Added support for slab6 VOX voxels.
Added pushfactor mobjinfo field. It determines how much a PUSHABLE mobj can be pushed. Default is FRACUNIT div 4 (25% of pusher speed)
Added PS_GetMobjInfoPushFactor PascalScript function. Returns the PushFactor of mobjinfo.
Parse SNDINFO & SNDINFO.txt entries from PK3 files.
Fixes to SNDINFO parsing.
A_Jump* mobjinfo functions will check if parameter is a label and jump to it. 
We can now define interval for THINKERs inside ACTORDEF lumps.
We can use PG_UP & PG_DOWN keys in the console to view the previous messages.
Added A_RandomGoto & A_ResetHealth ACTORDEF functions.

Version 2.0.4 build 719 - (19/9/2019)
-----------------------
OpenGL models rendered from external DLL.
External PNG textures fixes and loading optimization - fixed problems with later DHTP.
ZLib updated to version 1.2.8
Allow comments (//) inside PK3ENTRY lump.
Corrected problem with trailing spaces inside PK3ENTRY lump.
Fake 3d is off by default.
When the -dontsavedefaults is passed to the command line parameters, the defaults file (Doom32.ini) will not be saved.

Version 2.0.4 build 718 - (13/10/2018)
-----------------------
Paraller vissprite sorting using separate thread.
Fixed rare bug that could crash the engine. The error could occur if multithreading mode was enabled and total spans had never exceeded the number of active threads for flat drawing.

Version 2.0.4 build 717 - (20/9/2018)
-----------------------
Fixed bug in A_SubtractCustomParam and A_SubtractTargetCustomParam ACTORDEF functions. Instead of subtruction the actions were performing addition.
ACTORDEF functions can now access mobj custom params using the appropriate keywords:
  -CustomParam
  -TargetCustomParam
Added vspeed mobj field, will thrust in z axis the actor when is spawned.
R_SortVisSprites now uses radix sort algorithm when we have more than 1024 vissprites for better performance.
Use multiple cpu cores for HUD drawing.

Version 2.0.4 build 716 - (21/2/2018)
-----------------------
Added PROJECTILE keyword in ACTORDEF content. It sets the MF_NOGRAVITY MF_DROPOFF and MF_MISSILE flags on.
Added new ACTORDEF functions to control PASCALSCRIPT world and map variables:
  -A_SetMapStr
  -A_SetWorldStr
  -A_SetMapInt
  -A_SetWorldInt
  -A_SetMapFloat
  -A_SetWorldFloat
ACTORDEF functions can now access world and map variables using the appropriate keywords:
  -MapStr (for map string variables)
  -MapInt (for map integer variables)
  -MapFloat (for map float variables)
  -WorldStr (for world string variables)
  -WorldInt (for world integer variables)
  -WorldFloat (for world float variables)

Version 2.0.4 build 715 - (18/2/2018)
-----------------------
Corrected demo recording bug. Problem was more likely appeared in version 2.0.3.704.
Added -forcecompatibilitymode command line parameter.
Added -spawnmask command line parameter. Will check the command line for an arithmetic mask that will "crop" editor thing spawining options.
16 and 32 angles in sprites.
Midi files will not freeze the game input when restarted.
Volume control now works in midi files.
Midi files playback will pause when the game is paused (pause key pressed).
MP3 files playback will pause when the game is paused (pause key pressed).
Will not spawn terrain splashes in case of a bridge of self referencing sectors.
Will read PNG sprites inside WADs, support for "grAb" PNG chunk to determine offsets.
Will also read BMP (bitmaps) sprites inside WADs. 

Version 2.0.4 build 714 - (22/1/2018)
-----------------------
Interpolate sector flag can be controled within PascalScript.
Fixed accuracy of status bar drawing in 8 bit display mode.
Hires lookup tables are calculated using multiple threads if possible.
New icon, that resembles an ancient temple of Delphi archaeological site.
If infinite state cycles detected will exit with I_Error.
Small fixes to the fake3d effect.

Version 2.0.4 build 713 - (12/1/2018)
-----------------------
Menu beautifications.
Option to switch to ESDF keyboard movement.
Now correctly executes console commands on AUTOEXEC lump.
Corrected some desync problems with vanilla 1.9 demos (problem appeared in version 2.0.4 build 708).
Projectile weapons (plasma, rocket, bfg) are no longer firing off center to the right when zaxisshift is disabled.
Will not attempt to play demos from unsupported versions.
Speed optimizations to the software renderer on maps with big number of drawsegs. (using multiple lists of drawsegs).
Fixed small issues with the multithreaded dephbuffer calculation.

Version 2.0.4 build 712 - (1/1/2018)
-----------------------
Corrections to the screen DPI detection.
Doombuilder configuration files are distributed with the binaries.

Version 2.0.4 build 711 - (31/12/2017)
-----------------------
Fixes to sky drawing (both software and OpenGL mode).
Corrected z-fighting between corpse and dropped item (software renderer).
Multithreading depthbuffer calculation for the software renderer.
Multiple threads for spans drawing.
Multithreading performance improvements in computers with 4 or more CPU threads (software renderer). 
Screen DPI awareness when running in Windows 8.1 or greater.

Version 2.0.4 build 710 - (23/12/2017)
-----------------------
Automatically unset the TWO-SIDED flag for lines without backsector.
Speed optimizations in things rendering (software renderer).

Version 2.0.4 build 708 - (21/12/2017)
-----------------------
Mobjs do not slip while descenting a slopped floor.
Added line special 283, mobjs on tagged sectors will slip if descenting a slope.
Added "Gravity" sector field (controlled by PascalScript).
Added GetSectorGravity & SetSectorGravity PascalScript functions
Added RippleFloor, RippleCeiling and Gravity properties for PascalScript !TSector class.
Added MF2_EX_CANTLEAVEFLOORPIC mobj flag.
Added MF2_EX_JUMPDOWN mobj flag. 
Added MF2_EX_FULLVOLACTIVE MF2_EX_FULLVOLDEATH MF2_EX_FULLVOLSEE MF2_EX_FULLVOLPAIN MF2_EX_FULLVOLATTACK mobj flags
Added GameMap() & GameEpisode() PascalScript functions.
Added GetConsoleStr(), GetConsoleInt() and GetConsoleBool() PascalScript functions.
Corrected glitches when rendering the dynamic lightmap (OpenGL renderer).
Corrected glitches when rendering transparent middle textures (OpenGL renderer).
Fixed the "Picked up a medikit that you REALLY need!" bug (https://doomwiki.org/wiki/Picked_up_a_medikit_that_you_REALLY_need!). Note that when playing an older version demo the bug will intentionally reproduced.
Corrected T_FireFlicker savegame bug (https://doomwiki.org/wiki/Sector_type_17_is_disabled_after_loading_a_saved_game)
Fixed the Arch-Vile fire spawned at the wrong location bug (https://doomwiki.org/wiki/Arch-Vile_fire_spawned_at_the_wrong_location)
High resolution patches inside HI_START/HI_END namespace (OpenGL renderer).
Presice rw_distance and rw_offset calculation (https://www.doomworld.com/forum/topic/70288-dynamic-wiggletall-sector-fix-for-fixed-point-software-renderer/?do=findComment&comment=1340433)
Visplanes with the same texture now match up far better than before (https://www.doomworld.com/forum/topic/70288-dynamic-wiggletall-sector-fix-for-fixed-point-software-renderer/?do=findComment&comment=1342176)
R_PointToAngle function in rendering replaced with a floating point equivelant to eliminate glitches in huge maps.
Precalculated finesine and finecosine tables replaced with larger and more accurate equivelants (rendering only - not logic).
Added MF2_EX_DONOTRENDERSHADOW mobj flags, when set the mobj do not cast shadow (OpenGL renderer).
Speed optimizations for the software renderer.
Fixed tutti frutti bug for short textures.
Fixed problem that did not show the level name in Doom1 intermission screens. (problem had appeared in version 2.0.2 build 702).

Version 2.0.3 build 707 - (12/12/2017)
-----------------------
Fixed full screen title drawing problem when the width resolution was 1920 or 2560.

Version 2.0.3 build 706 - (18/11/2017)
-----------------------
Added new model formats (ddmodel & dmx) for the OpenGL version. These formats can be created with the DD_MODEL tool (https://sourceforge.net/projects/delphidoom-procedural-modeler/).

Version 2.0.3 build 705 - (7/11/2017)
-----------------------
Fixed music pitch problem (as mentioned by RTC_Marine at https://www.doomworld.com/forum/topic/92113-delphidoom-20/?do=findComment&comment=1700485)
Hud drawing speed optimizations in 2560 x 1440 & 3840 x 2160 resolutions.

Version 2.0.3 build 704 - (29/10/2017)
-----------------------
PascalScript can now access DLLs from inside pk3 files. (or WAD files if using PK3ENTRY lump)
Smooth freelooking. Now the engine does not ignore the slight variations in mouse movement (as suggested by  RTC_Marine - https://www.doomworld.com/forum/topic/92113-delphidoom-20/?do=findComment&comment=1700485) 
Internal save/load version updated to version 2.03.
Added gl_no_glfinish_hack console variable to avoid with OpenGL slowdown on systems with Intel HD4000 and Windows 10 (default is True).
Will load configuration file (doom32.ini) of previous versions. 

Version 2.0.2 build 703 - (17/10/2017)
-----------------------
Added PCX image external texture support.
A_Gotoxxxxx functions evaluate small expresions in state parameter (addition & substraction of a constant value).
Added AllMissiles method to "Actors" PascalScript variable.
Added mobj functions to control flow depending on map & world variables:
 - A_JumpIfMapStringEqual
 - A_JumpIfMapStringLess
 - A_JumpIfMapStringGreater
 - A_JumpIfMapIntegerEqual
 - A_JumpIfMapIntegerLess
 - A_JumpIfMapIntegerGreater
 - A_JumpIfMapFloatEqual
 - A_JumpIfMapFloatLess
 - A_JumpIfMapFloatGreater
 - A_JumpIfWorldStringEqual
 - A_JumpIfWorldStringLess
 - A_JumpIfWorldStringGreater
 - A_JumpIfWorldIntegerEqual
 - A_JumpIfWorldIntegerLess
 - A_JumpIfWorldIntegerGreater
 - A_JumpIfWorldFloatEqual
 - A_JumpIfWorldFloatLess
 - A_JumpIfWorldFloatGreater
 - A_GoToIfMapStringEqual
 - A_GoToIfMapStringLess
 - A_GoToIfMapStringGreater
 - A_GoToIfMapIntegerEqual
 - A_GoToIfMapIntegerLess
 - A_GoToIfMapIntegerGreater
 - A_GoToIfMapFloatEqual
 - A_GoToIfMapFloatLess
 - A_GoToIfMapFloatGreater
 - A_GoToIfWorldStringEqual
 - A_GoToIfWorldStringLess
 - A_GoToIfWorldStringGreater
 - A_GoToIfWorldIntegerEqual
 - A_GoToIfWorldIntegerLess
 - A_GoToIfWorldIntegerGreater
 - A_GoToIfWorldFloatEqual
 - A_GoToIfWorldFloatLess
 - A_GoToIfWorldFloatGreater
Support for 'TEXTURE3' texture lump.
Added PascalScript function "IsPrime()".
Builds map nodes if missing.

Version 2.0.2 build 702 - (30/8/2017)
-----------------------
Fixed alpha channel in TGA screenshots.
Added keepsavegamename console variable, when true (default) you do not have to re-ender the save game name when overwritting saves.
The mouse sensitivity slider within menus can accept values up to 20.
Will not crush when finishing MAP33 etc levels.
Fixed revenant internal demo bug (https://www.doomworld.com/forum/topic/95719-a_tracer-and-gametic/?do=findComment&comment=1788516)

Version 2.0.1 build 701 - (28/12/2016)
-----------------------
Fixed some glitches of the overlay drawer when screenblocks < 10.
New PascalScript functions, mostly for retrieving information about mobjinfo.

Version 2.0.1 build 700 - (22/12/2016)
-----------------------
Ignores map things 4001, 4002, 4003 & 4004 (Boom compatibility).
Places screenshots inside data\screenshots folder.
Mirror screenshot to jpg format.
General purpose multithreading utilities will use more than 2 logical CPUs if available.
Sound precaching discarted. (was causing problems with memory managment)
Added -cgaX3 command line parameter, starts at 960X600 resolution.
Advanced scripting mechanism (PascalScript).
Added A_RunScript mobj function. Executes 1 or more PascalScripts.
Added testmap and test console commands. Opens a minimum (build-in) map for testing.
SpawnMobj console command also gets angle as parameter.
Added support for V5 glnodes.
Visplane hash. 
Added -geom command line parameter. e.g. -geom 800x600
Added TNTHOM and HOM console commands, to enable/disable HOM detection. (software renderer only)
Added compile, compilescript & pscomp console commands, compiles pss script into bytecode (file input, file output).
Added A_GhostOn mobj function.
Added A_GhostOff mobj function.
THINKER keyword inside ACTORDEF lumps (runs script).
Added -con command line parameter, executes at loadtime a file containing console commands.
Added halt console command, stops executing without endscreen and without end sound.
Corrected bug that crashed programm while loading savegame with PULLERS(MT_PULL) or PUSHERS(MT_PUSH).
Added line special 282, create ladder to tagged sectors.
Saved games contain texture and flat names, no texture and flat numbers (SAVEGAMEVERSION = 122).
Added A_Blocking mobj function.
Added MF2_EX_DONRUNSCRIPTS mobj flag.
Added A_DoNotRunScripts & A_DoRunScripts mobj functions.
Added MF2_EX_PRECISESPAWNANGLE mobj flag. (Use precise spawnangle of mapthing to spawn mobj)
Keep sector renderflags in saved games.
Keep linedef renderflags in saved games.
Support for HI_START & HI_END namespace inside WADs.
Bug fix: Now wall drawing uses correct light level in 32 bit color software rendering mode.
Inverse colormap is less dark in 32 bit color software mode.
Maximum number of general purpose threads increased to 16.
Added line special 281, create 3d middle floor to tagged sector(s).
More accurate fake3d effect.
Added line specials 386, 387, 388, 389, 390 & 391, create sloped sectors.
Teleport zoom effect.
Added getworldvar & getmapvar console commands. Display pascal script world and map variables.
Added setworldvar & setmapvar console commands. Set pascal script world and map variables.
Will use PK3ENTRY lump inside a wad file to define long filename aliases for other wad lumps.
Added MF2_EX_CUSTOMDROPITEM mobj flag. When set, the specified instance of the mobj drops a custom dropitem
Added A_SetDropItem & A_SetDefaultDropItem mobj functions.
Added A_TargetDropItem & A_DefaultTargetDropItem mobj functions.
Added overlaydrawtextleft, overlaydrawtextright, overlaydrawtextcenter, overlaydrawpixel and overlayputpixel console commands.
Added A_GlobalEarthQuake mobj function.
Corrected voxel scale in software rendering mode. 

Version 1.1.6 build 605 - (29/8/2016)
-----------------------
Fixes to the textured automap.

Version 1.1.6 build 600 - (31/12/2015)
-----------------------
When setblocks = 10 viewwidth does not pad div 8.
Unlimited buffer when recording demos.
Fake3d fixes.
Added excludewidescreenplayersprites console variable, will not apply widescreen correction to player sprites.
Menu appearance improvements.
Software renderer speed optimizations.
Improved Chex Quest compatibility.
Now recornizes all FREEDOOM iwads.
Added doadjustmissingtextures console command, adjust missing upper/lower textures on demand, regardless the value of adjustmissingtextures console variable.
Check for music aliases inside wad.
Bug fix, now displays the correct translation of sprites in OpenGL mode.
Fixed transparency in 8 bit color mode.
Fixed cachehit command stats when not using external textures.
Multithreading utilities (mt_utils.pas).
Allows player to climb over things by jumping.
Improvements to interpolation subsystem.
Corrected automap aspect ratio in OpenGL mode.
Textured automap.
Added texturedautomap console variable.
Will attempt to load UDMF maps.
Added -cgaX2 command line parameter, starts at 640X400 resolution.
Fixed automap drawing when r_interpolate variable is true.
Fixed voxel loading bug in software mode when using multithreading functions.
Added MF2_EX_NODAMAGE mobj flag.
Added A_SetNoDamage & A_UnSetNoDamage mobj functions.
Added MF2_EX_ONMOBJ and MF2_EX_PASSMOBJ mobj flags.

Version 1.1.5 build 581 - (22/5/2013)
-----------------------
Small fixes to voxel support.

Version 1.1.5 build 580 - (22/5/2013)
-----------------------------------
Added -fullhd, -svga and -vga command line parameter.
Added force_numwallrenderingthreads_8bit and force_numwallrenderingthreads_32bit console variables, set the number of threads to create for wall rendering.
Status bar does not appear transparent when you open the menu (OpenGL)
Default miditempo changed to 160
Added missileheight mobjinfo field.
MAXDRAWSEGS increased to 4096.
Boom fakefloor custom colormaps work with external textures in software mode.
Boom fakefloor custom colormaps work in OpenGL.
Executes all console commands inside wad lumps with the "AUTOEXEC"name.
Improved BOOM compatibility.
Maximum visplanes increased to 8192.
Added line specials 279 & 280, create ripple effect to tagged sectors floor or/and ceiling.
Added -cga command line parameter, use 320x200 screen resolution.
Corrected bug with mouse sensivity in different screen resolutions.
Replaced old zone memory allocation.
Removed limit on number of visprites, now they are allocated dynamically.
R_SortVisSprites now uses quicksort for better performance.
Added precisescalefromglobalangle console variable, when true uses more precise calculations in software rendering.
Added MF2_EX_FRIGHTENED mobj flag.
Added A_SetFrightened and A_UnSetFrightened mobj functions.
New fake3d algorythm, better 3d emulation and faster in software rendering mode.
Support for voxels in OpenGL rendering mode.
Added gl_renderwireframe console variable.
Added vx_maxoptimizerpasscount console variable, indicates how many passes at max the voxel mesh optimizer makes. Default is 0 (=use FastOptimize method for acceptable results and good performance)
Support for voxels in software rendering mode, still needs work.

Version 1.1.4 build 550 - (18/3/2013)
-----------------------------------
Added interact state for mobjs.
Added A_SpawnSmokeUp, A_SpawnSmokeDown and A_SpawnSmokeHorz mobj functions
Added MF2_EX_INTERACTIVE mobj flag.
Added A_SetInteractive and A_UnSetInteractive mobj functions
Fixed wav chunks reading bug.
Added MF2_EX_DONTINFIGHTMONSTERS mobj flag, suppress monster infight for mobjs of the same inheritance.
Added A_SetMonsterInfight and A_UnSetMonsterInfight mobj functions.
Added A_RemoveSelf mobj function.
Added A_NoiseAlert mobj function.
Added A_ConsoleCommand mobj function.
Chase camera positioning improvements.
FastMM memory manager upgrated to version 4.99.
Corrected stencil sky rendering in OpenGL mode.
Zlib updated to version 1.2.5.
Added autoadjustmissingtextures console variable, when true try to "guess" and correct missing textures.
Autoloads required pak/pk3 files inside AUTOLOAD wad lump.
Added custom parameters to mobjs ([parameter name(string)] - [value(integer)], eg inventory). 
Added A_SetCustomParam, A_AddCustomParam, A_SubtractCustomParam mobj functions.
Added A_SetTargetCustomParam, A_AddTargetCustomParam, A_SubtractTargetCustomParam mobj functions.
Added A_JumpIfCustomParam, A_JumpIfCustomParamLess, A_JumpIfCustomParamGreater mobj functions.
Added A_JumpIfTargetCustomParam, A_JumpIfTargetCustomParamLess, A_JumpIfTargetCustomParamGreater mobj functions.
Added A_SetShootable and A_UnSetShootable mobj functions.
Added A_PlayerMessage mobj function.
Added allowplayerbreath console variable, when true play player breath sound. (default is false)
Added A_PlayerFaceMe mobj function.
Added MF2_EX_FLOORCLIP mobj flag.
Faster loading when -devparm is defined.
Added A_GoTo, A_GoToIfCloser, A_GoToIfHealthLower mobj functions.
Added A_GoToIfCustomParam, A_GoToIfCustomParamLess, A_GoToIfCustomParamGreater mobj functions.
Added A_GoToIfTargetCustomParam, A_GoToIfTargetCustomParamLess, A_GoToIfTargetCustomParamGreater mobj functions.
Added A_SetFloorClip and A_UnSetFloorClip mobj functions.
DLIGHTSDRAWRANGE and SHADOWSDRAWRANGE increased to 2048 * FRACUNIT.
Fixed disapearing sprites with transparency < 50% in OpenGL mode. 
Doesn't try to spawn DoomBuilder 3D Editing mode camera (doomednum=32000).
Support for Chex Quest and Chex Quest 2.
Support for Hacx (varsion 1.2)
'TEXT' keyword in dehacked files works now with music.
Great speed optimizations in 8 bit color software mode (fps incresed 10-15%).
Turbo scale limited to 200%
Added modelmapping console command to determine which models are present. (OpenGL version only)
Speed optimizations in 32 bit color software mode (fps incresed 5-10%).
Added spawnmobj console command
Added -blancbeforerender command line parameter (software mode only)
Added optimizedcolumnrendering console variable, when true (default) uses optimized method while rendering wall columns and sky.
Fixed ascpect ratio when using widscreen monitors.
Added allowhidetails console variable.
Added widescreen,widescreensupport console variables.
Added forcedaspect console variable to set custom aspect ratio.
Added pngtransparentcolor and pngtransparentcolor2 console variables.
Added optimizedthingsrendering console variable, when true (default) uses optimized method while rendering sprites
Multithreading column rendering.
Added assumecommontranspantcolors console variable, when true assumes x0FFFF, x0FF00FF and x0FFFF00 as transparency indicators in png images.

--------------------------------------
version 1.1.3.500 (Released 20/1/2012)
---------------
Displays Disk Buzy icon for 4 ticks instead of 4 frames.
WAD lumps hash indexing for better performance. (using djb2 hash function)
Fixed ENDOOM bug witch causing menu to respond during ending game while playing a demo. 
Added A_SpawnItemEx mobj function
Fixed bug that didn't recornized mf2_ex flags inside ACTORDEF lumps
Added Green blood and Blue blood flags.
Added MF2_EX_NOTELEPORT flag.
Added A_RandomMissile mobj function.
Default zone size increased from 8 MB to 32 MB.
Show demo playback progress.
Added showdemoplaybackprogress console variable.
Transparency in 8 bit rendering using euclidian square distance to aproximate palette indexes.
Added diher8bittransparency console variable.
Added displayresolution alias for "detaillevel" console variable.
Fixed Medusa Effect Bug.
Added engage console command, alias for start and playgame.
Precalculate floating point parameters of custom mobj functions as fixed_t.
Boom compatible friction effect.
Boom compatible pushers. (linedef special 224/wind, 225/current, 226/push-pull)
Suspends interpolation for teleporting objects, that eliminates some drawing gliches.
Fixed transparency HUD in OpenGL mode.
Added support for GL_FRIENDLY nodes (OpenGL version). 
Automatically loads *.GWA files if autoloadgwafiles console variable is set to true. (OpenGL version). 
Fixed background flat in finale text drawing (F_TextWrite) 
Added giveallkeys, idkeys console commands, give all keys (idkeys cheat).
Fixed sprite clipping bug in OpenGL mode when looking up/down.
Removed limit on lines hit.
Hash Indexing of external PAK/PK3/ZIP files.
FastMM memory manager upgrated to version 4.94.
Default miditempo changed to 128.
Added MF2_EX_PUSHABLE and MF2_EX_CANNOTPUSH mobj flags, enabled pushable objects.
Added A_HideThing and A_UnHideThing mobj functions.
Added support for dynamic lights, using LIGHTDEF lump.
Added hidedoublicatedbarrels console variable, if there are many barrels at the exact same position draws only one.
Precaclulate OpenGL display lists for floors and ceilings if possible.
Fixed sky rendering problems in OpenGL mode.
Added Crash state in mobjs.
New simplified blocklinks handling mechanism.
Fixed Dehacked bug, now correctly handles POINTER keyword
Added gl_stencilsky conslole variable.
Corrected some issues in OpenGL rendering.
Added support for MD2 models (OpenGL only).
Check for LIGHTDEF lumps inside PAK/PK3 files. (First parse all LIGHTDEF entries and then all LIGHTDEF.txt entries)
Added gl_drawmodels console variable.
Added gl_smoothmodelmovement console variable.
Dynamic lightmap implementation.
Added gl_uselightmaps console variable.
Added gl_precachemodeltextures console variable.
OpenGL UI speed optimizations.
Custom lighttables in OpenGL using GLGAMMA lump.
New external texture format named (using .material extension) to combine at load time with user defined parameters more than one external textures into one.
Added simple shadows.
Added gl_drawshadows console command.
Added ATurn5 and A_Turn10 mobj functions.

Old Changes
-----------
Added PAGE_TITLE dehacked field.
Keyboard movement can be changed from <arrows> movement to <WASD> movement.
Added keyboardmode console command.
Added Boom generalized linedefs.
Added PD_BLUEC, PD_REDC, PD_YELLOWC, PD_BLUES, PD_REDS, PD_YELLOWS, PD_ANY, PD_ALL3, PD_ALL6 dehacked strings.
Added support for ANIMATED wad lump, to define custom animations.
New line scrolling specials for scrolling:
  Right, down and up texture scrolling (85, 273, 274).
  Fast left, right, down and up texture scrolling (275, 276, 277, 278).


--------------------------------------
version 1.0.2.383 (Released 3/3/2008)
---------------
New features:

   1. Added OpenGL rendering. (gldoom32.exe)
   2. Added displaydiskbuzyicon console variable.
   3. Added jpeg external textures support.
   4. Added A_FadeIn10, A_FadeIn20 and A_FadeIn30 mobj functions.
   5. Added A_FadeOut10, A_FadeOut20 and A_FadeOut30 mobj functions.
   6. The idmypos cheats now shows also the z position (height) of the player.
   7. Added idmypos console command.
   8. Added menu_optionsdisplayopengl, menu_optionsopengl, menu_opengl console commands.
   9. Added OpenGL support for Hi-resolution flats inside WADs.
  10. Added default_transparent_filter_percent, use_fog, fog_density, gl_nearclip console variables.
  11. Added gl_tex_filter, gl_texture_filter_anisotropic console variables.
  12. Added gl_drawsky and gl_linear_hud console variables.
  13. Enabled external texture support for OpenGL rendering.
  14. External hi-resolution sprite support. (OpenGL version only)

Fixes:

   1. Fixed zip library memory leak.
   2. Speed optimization for V_ReadPalette function.
   3. Fixed lighting effect glitches in OpenGL rendering.
   4. Fixed very rare bug that caused crashes when statusbar drawned.

--------------------------------------
version 0.8.5.342 (Released 4/1/2008)
---------------
The source code can be compiled with FPC (tested with version 2.2.0) (Some features are not present like PNG textures and PK3/PK4 files support)
Added massacre console command.
Added terrain types.
Added allowterrainsplashes variable.
Added MF2_EX_NOHITFLOOR flag.
Added continueafterplayerdeath variable, allows monsters to fight each other after player's death.
Plays random pain sound when MF_EX_RANDOMPAINSOUND flag is set.
Don't spawn blood when a sector crashes an invulnerable thing or player.
Added -internalgamedef command line parameter to ignore GAMEDEF lump inside DDSYSTEM.WAD.
Allows ';' for comment in SNDINFO lumps.
Automap zoom in and screenblocks change can also work with the '+' key in numeric keyboard.
Added listcmds console command.
Chace camera view.
Added chasecamera console variable.
Added chasecamera_viewxy console variable.
Added chasecamera_viewz console variable.
Corrected small sky bug in Ultra Detail with zaxisshift.
Added criticalcpupriority console variable.
Added usetransparentsprites, dontusetransparentsprites, uselightboost and dontuselightboost command line parameters.
Added lightboostfactor command line parameter.
Added chasecamera and nochasecamera command line parameters.
Maximum display resolution increased to 2048x1536.
Added ENDOOM support.
Corrected menu flashes.

--------------------------------------
version 0.8.317 (Released 18/11/2007)
---------------
Added option for automap rotation.
Does not use external textures for title screens if useexternaltextures variable is set to false.
Correctly identify game directories for external textures and mp3 music.

--------------------------------------
version 0.8.312 (Released 12/10/2007)
---------------
Fixed compatibility with old version 1.1, 1.2
Added music tracks aliases.

--------------------------------------
version 0.8.311 (Released 12/9/2007)
---------------
Corrected sound clipping distance.
Corrected choppers cheat bug.
Fixed bug with shareware 0.99 IWAD.
Corrected bug: Don't keep cheats in demo playback when keepcheatsinplayerreborn variable is set.

Added mp3 music support.
Added usemp3 and preferemp3namesingamedirectory defaults.
Added defaults and setdefaults console commands for resetting all variables to default values.
Added default console command to set the default value for a specified variable. Use default * to reset variables to defaults.
More efficient palette change emulation for hi-resolution textures.
Better search algorythm inside PK3 directory stucture. 
Added iddt console command.
Added idspispopd and idclip console commands.
Modified games with shareware are allowed when in development mode.
Added cmdline console command.
Added miditempo default and console command for setting the mus lumps conversion tempo.
Added lowest resolution mode.
Added lowestres, lowestresolution console commands.
Added -lowestres command line parameter.
Added use32bittexturepaletteeffects console command, alias for 32bittexturepaletteeffects.
More readable menus, when in the menus the background turns darker.
Added shademenubackground variable.
Added compatibility menu. 
Added allowplayerjumps variable.
Zone size can be specified in default.cfg.
Added menu_main console command.
Added menu_newgame, menu_new console commands.
Added menu_options console command.
Added menu_optionsgeneral, menu_generaloptions console commands.
Added menu_optionsdisplay, menu_displayoptions, menu_display console commands.
Added menu_optionsdisplaydetail, menu_displaydetailoptions console commands.
Added menu_optionsdisplayappearence, menu_displayappearenceoptions, menu_displayappearence console commands.
Added menu_optionsdisplayadvanced, menu_displayadvancedoptions, menu_displayadvanced console commands.
Added menu_optionsdisplay32bit, menu_display32bitoptions, menu_display32bit console commands.
Added menu_optionssound, menu_soundoptions, menu_sound console commands.
Added menu_optionssoundvol, menu_soundvoloptions, menu_soundvol console commands.
Added menu_optionscompatibility, menu_compatibilityoptions, menu_compatibility console commands.
Added menu_optionscontrols, menu_controlsoptions, menu_controls console commands.
Added menu_optionssystem, menu_systemoptions, menu_system console commands.
Added menu_load, menu_loadgame console commands.
Added menu_save, menu_savegame console commands.
Added lumpsize, lumplength console commands.
Added lumpnum console command.
Added numlumps console command.
Added -autoscreenshot command line parameter.
Support for dehacked DEH and BEX files, to use them use -deh or -bex command line parameter.
Added DEH_ParseFile and BEX_ParseFile console commands.
Added DEH_ParseLump and BEX_ParseLump console commands.
Added DEH_PrintCurrentSettings, DEH_PrintSettings, BEX_PrintCurrentSettings and BEX_PrintSettings console command.
Added DEH_SaveCurrentSettings, DEH_SaveToFile, BEX_SaveCurrentSettings and BEX_SaveToFile console command.
Added -nowaddehacked command line parameter to prevent loading 'DEHACKED' lump inside wad.
Due to internal string manipulation are allowed DEHACKED strings bigger than original strings.
Music lumps does not require the 'D_' prefix.
Sound lumps does not require the 'DS' prefix.
Corrected bug: Cyberdeamon death in E4M2 will no longer trigger G_ExitLevel().
Added badbossdeathendsdoom1level varyable to end Doom1 levels if Cyberdeamon or Spider Die.
Added type and cat console commands.
Added -file1, -file2 .. -file9 command line parameters to specify priority PWADs.
Added -pakfile1, -pakfile2 .. -pakfile9 command line parameters to specify priority PAK files.
Maximum command line arguments increased from 256 to 1024 (mostly for usage with default.cmd or response files).
Added sfx support for external wav files inside pak/pk3 files.
Added sfx support for wav files inside WAD as lumps.
Added useexternalwav console command.
The minimum number of sound channels is set to 8.
Added MF_EX_FLOATBOB flag.
Added MF_EX_NORADIUSDMG flag.
Added MF_EX_FIRERESIST flag.
Added random sound selector subsystem, sound lumps with last character numeric can be in range '0' to '9' to define them.
Added MF_EX_RANDOMSEESOUND flag.
Added MF_EX_RANDOMPAINSOUND flag.
Added MF_EX_RANDOMATTACKSOUND flag.
Added MF_EX_RANDOMDEATHSOUND flag.
Added MF_EX_RANDOMACTIVESOUND flag.
Added MF_EX_RANDOMCUSTOMSOUND1 flag.
Added MF_EX_RANDOMCUSTOMSOUND2 flag.
Added MF_EX_RANDOMCUSTOMSOUND3 flag.
Added A_RandomPainSound mobj function.
Added A_RandomSeeSound mobj function.
Added A_RandomAttackSound mobj function.
Added A_RandomDeathSound mobj function.
Added A_RandomActiveSound mobj function.
Added A_RandomCustomSound1 mobj function.
Added A_RandomCustomSound2 mobj function.
Added A_RandomCustomSound3 mobj function.
Added A_RandomCustomSound mobj function.
Number of external wad files can exceed 64 now.
Added MF_EX_CUSTOMEXPLODE flag.
Added ExplosionDamage and ExplosionRadius mobj fields to use with A_Explode when MF_EX_CUSTOMEXPLODE flag is set.
Added MF_EX_BOSS flag.
Replaced original memory manager with FastMM.
Added lowgravity cheat (available trhu console only).
Added -singletics command line parameter to prevent adaptiveness of internal clock.
Added support for SNDINFO lump (sound aliases).
Added support for functions with custom parameters inside ACTORDEF lumps.
Added A_Stop function.
Added A_Jump function.
Added MF_EX_FLOORHUGGER flag.
Added MF_EX_CEILINGHUGGER flag.
Added MF_EX_SEEKERMISSILE flag.
Added meleedamage mobj field.
Added A_CustomMissile, A_NoGravity, A_Gravity, A_NoBlocking, A_MeleeAttack mobj functions.
Added MF_EX_SPAWNFLOAT flag.
Added forum and forums console command, go to DelphiDoom forums.
Changed switcing fullscreen code to keep non-standard windowed modes.
Added MF_EX_DONTHURTSPECIES flag.
Added A_SpawnItem, A_SeekerMissile, A_CStaffMissileSlither and A_SetTranslucent mobj functions.
Transparency can be controlled with A_SetTranslucent() function.
Added suport for custom dropped items.
Added A_CustomBulletAttack, A_FadeOut, A_FadeIn and A_MissileAttack mobj functions.
Added MF_EX_LOWGRAVITY flag.
Added A_LowGravity, A_AdjustSideSpot, A_Countdown, A_FastChase mobj functions.
Added A_ThrustXY, A_ThrustZ, A_Turn mobj functions.
Added A_JumpIfCloser and A_JumpIfHealthLower mobj functions.
Added A_ScreamAndUnblock mobj function.
Added MF_EX_INVULNERABLE and MF_EX_RANDOMMELEESOUND flags.
Added A_PlayWeaponsound, A_SetInvulnerable, A_UnSetInvulnerable, A_RandomMeleeSound mobj functions.
Added A_FloatBob and A_NoFloatBob mobj functions.
Added A_Missile and A_NoMissile mobj functions.
Added MF_EX_DONOTREMOVE mobj flag.
Added MF_EX_DONTHURTSHOOTER mobj flag.
Added DEFAULTMISSILE and DEFAULTTRANSPARENT ACTORDEF keywords.
Added A_ComboAttack and A_BulletAttack mobj functions.
Added MF_EX_LOOKALLAROUND, MF_EX_GHOST, MF_EX_THRUGHOST and MF2_EX_MEDIUMGRAVITY mobj flags.
Added A_MediumGravity mobj function.
Added heal state for actors.
Added A_Wander mobj function.
Added random monster spawning option, use spawnrandommonsters console command to set.
Added -spawnrandommonsters and -nospawnrandommonsters command line parameters.
Added DEH_PrintActions, DEH_ShowActions, BEX_PrintActions and BEX_ShowActions console commands.
Added dehacked support for misc section.
Support for hi-res full screen texture replacements (TITLEPIC, HELP1, HELP2, CREDIT).

--------------------------------------
version 0.8.308 (Released 3/9/2007)
---------------
Corrected external demo bug.
Displays the correct intermission texts in Plutonia and TNT.
Scales correctly external textures with wrong aspect.
The 'exec' console command does not allow recursive calls of con files.
Plays external demos with filenames bigger than 8 chars.
Changed sound pan to be more accurate.

Added true 3d emulation.
Added fake3d and usefake3d console command.
Added -fake3d and -nofake3d command line parameters.
Controls Options menu added.
Added -invertmouselook, -noinvertmouselook, -invertmouseturn and -noinvertmouseturn command line parameters.
Added invertmouselook and invertmouseturn console commands.
Improved hash function for column cache.
Added cachehit console command to display 32 bit texture cache hit factor.
Added resetcachehit console command to reset 32 bit texture cache hit counter.
More accurate scaling drawing menus (M_Drawer).
Added addpakfile, loadpakfile, addpak, loadpak console commands for adding at runtime PAK/PK3files. Also work with directories and wildcards. (zip files will be excluded).
Added cleartexturecache alias for clearcache console command.
Added resetcache and resettexturecache console command.
Improved column cache managment, increase cache hit propability.
MMX inline assembly optimization.
Added -nommx command line parameter to disable MMX and 3DNow extensions.
Added -iwad command line parameter alias for -mainwad.
Added -windowed command line parameter alias for -nofullscreen.
Added typeof console command.
Fuzz table optimization.
Added use32bitfuzzeffect console command, use old fuzz effect in 32 bit mode.
Added fullscreen console command.
Display menu options divided into submenus.
Added safemode console command. Type 'safemode true' if you have any problems like crashes.
More readable default.cfg file.
Added usemmx, mmx console commands.
Experimental multithreading support, disabled by default.
Added usemultithread console command.
Added preferetexturesnamesingamedirectory console command, prefer pk3 textures inside path containing the game name (DOOM, DOOM2, PLUTONIA, TNT).
Added ls console command, alias for dir.
Added pwd console command, alias for cd.
Added gotowebpage console command.
Added homepage console command.
Added help and documentation console command.
Added getlatestversion and downloadlatestversion console command.

--------------------------------------
version 0.8.307 (Released 31/8/2007)
---------------
Corrected animated flats bug outside F_START and F_END lumps.
Restarting midi files inside PWADS does not freeze the game.

Display fps while playing.
Added suicide console command.
Added keepcheatsinplayerreborn default.
Added playermessage console command.
Better smoke spawning in lower textures. 
Added support for PNG images.
Added support for hi resolution textures (walls). 
Added a launcher for easy start.
Added 32bittexturepaletteeffects console command, to enable/disable palette effects.
Corrected hi-resolution transparent textures bug.

--------------------------------------
version 0.8.303 (Released 27/8/2007)
-----------
Determine hi-resolution flats (raw format) inside wad.
Use flats from PWADS even if not inside F_START, F_END lumps.
Increased flat cache size limit.
In ultra resolution increased flat filtering level.
In high resolution does not make anymore 1-D wall filtering, instead use 2-D filtering in lower scale than ultra resolution.
Added clearcache console command.
32 bit texture cache is now dynamically resized.
Added execcommandfile console command alias for exec.
Added clearscreen console command alias for cls.
Added iddqd console command alias.
Added idfa console command alias.
Added idkfa console command alias.
Playdemo console command plays also external demos stored in files. 
Added extremeflatfiltering console command.

Corrected multiline player messages display.
You can't disable thinkers during demo recording and playback.
Fixed automap display bug.
Fixed screenshot bug while running from CD-ROM.

--------------------------------------
version 0.8.302 (Released 23/8/2007)
-----------
Fixed interpolation bug. Interpolation runs smoother.
Fixed jump problem that was occuring in some sectors with sky ceiling.
Better compatibility with old game demos.
Inline span and column drawing, gives about 5% faster rendering.
Memory stall crazy hack fixed performance problems in resolutions 1024x768 or higher.
Fixed problem in hi resolution modes while running in 16 bit color desktop.
More accurate fps counter.
Wipe screen works in 32 bit color mode.

Added line specials for right, down and up texture scrolling (142, 143, 144).
Added line specials for fast left, right, down and up texture scrolling (145, 146, 147, 148).
Corrected smoke spawning in lower textures. 
Added fixstallhack variable to avoid blanc line in the right side of the screen.
Multiline player messages.
Rendering engine now is configurable within the menus.
Added support for 512x512 hi-resolution flats.
Double scale for standard 64x64 flats in Hi and Ultra resolution.
Added -nosingledemo command line parameter to avoid exiting after playing an external demo.
Added 'playgame' and 'start' console commands, warping to level from console.
Appends command line parameters from file 'default.cmd'.
Added commandlineparams console command.

--------------------------------------
version 0.7.286 (Released 19/7/2007)
-----------
Fixed masked columns light level in 32 bit color modes.
Fixed vision flats drawing bug in 32 bit color modes.
Fixed bug with doors that were not closing.
Blood spawns red light effect.

--------------------------------------
version 0.7 (Released 18/7/2007)
-----------
Added zonefiledump console command.
Added cmdlist console command.
Runs about 5% faster in high and ultra resolution.
Corrected floor filtering for flats.
General optimizations, runs smoother.
Added detailLevel console command.
Add medium resolution, classic Doom's high.
Normal resolution now uses unfilterer textures with dynamic lighting.
Programming: Speed optimizations.
Corrected aspect ratio display. 
Correted masked columns rendering bug.
Corrected E4M8 end bug in ultimate Doom.
Added 'set usetransparentsprites' console command to enable/disable transparency.
Added flag for transparent Rocket explosion.
Added red, green, blue and yellow light flags.
Added lightboostfactor console command to adjust light level.
Added uselightboost console command to enable/disable lightboost.
Added playdemo console command.
Added loadgame console command.
Added savegame console command.
Added -nothinkers command line parameter.
Added stopthinkers console command to stop all thinker functions.
Added startthinkers console command to restore thinker functions.
Added endgame console command.
Added support for autoexec files.
Added -autoexec command line parameter.
Added exec console command to execute an autoexec file.
Added printf console command.
Added write console command.
Added autorunmode in config file.
Fixed frame interpolation support to exceed 35fps.
Added interpolate console command.
Added -interpolate and -nointerpolate command line parameters.
Added pause_console command.
Added -defaultvalues command line parameter to use default built-in config.
Fixed display bug in 16 bit desktop when using windowed modes.
Dropped items fall down to floor.
Display automap overlayed with 3d view.
Added allowautomapoverlay console command.
Added rambo console command.
Added givefullammo console command.
Added givefullammoandkeys console command.
Added dir console command.
The commands set, get, list and cmdlist now work with wildcards also.
Added allowlowdetails console command, if true allow Low and Medium detail level.
Added Bitmap and Targa external textures support.
Added PK3 and PAK file filesystem support.
While dying player turn the face towards ceiling.

--------------------------------------
version 0.6 (Released 20/6/2007)
-----------
Added disk busy display
Statusbar now can draw minimum status display in full screen (press again'+' to clear)
Added 'set' console command.
Added 'get' console command.
Added Hi resolution mode.
-hires, -normalres and -lowres -ultrares commandline parameters to override default resolution.
Changed screenshot code for TGA images, store a upper-left hand corner image.
Added fps console command to display fps.
Speed optimizations for hires and ultrares modes.
Now determines if runs from a cdrom without -cdrom parameter.
Frame interpolation to exceed the 35 fps game engine limit.


--------------------------------------

version 0.5.232 (Released 6/6/2007)
---------------
Added Quake-style console.
Added console commands.
Display stderr, stdout in console.
Changed network code, still net unavailable.
Corrected mouse sensivity.
Save game and Load game slots increased from 6 to 8.
In automap is displayed the level time.
Corrected FPC rendering issues.


--------------------------------------

version 0.4.225 (Released 29/5/2007)
---------------

Now it compiles also with FPC version 2.1.4.
Fixed the sky texture bug. Now displays the correct sky texture depending on the episode.
Fixed the change music cheat bug in shareware version, now does not change the music if music number is invalid.
Change: The god mode cheat after the player's death reborns the player.
Fixed status bar drawing from older game versions. Now works with ancient ver 0.99 shareware IWAD.
Corrected sound probjem with 22KHz samples (??)
No more mono audio, now supports 2 channels stereo sound.
Increased maximum numbers of visible sprites from 128 to 1024.
Increased MAXDRAWSEGS from 1024 to 2048 (originally 256)
Increased MAXPLATS from 30 to 512.
Increased MAXLINEANIMS from 64 to 1024.
Increased SAVEGAMESIZE from $2C000 to $80000
Look left and right unsing [HOME] and [PAGE UP] keys. 
Fixed mouse support.
Fixed joystick support.
Added -mouse, -nomouse, -joystick and -nojoystick command line parameters.
Fixed bug with unchanged textures in switches in Retail version.
Maximum external wad files increased from 20 to 64
If there is not any known wad file in the current path tries to find one and load it. For example can be used with freedoom.wad without specifing -mainwad command line parameter.
Deault starting resolution is now 800x600.
You can now jump using the 'a' key.
Changed cheat code to ate the keypress event if in cheat pending state. Now Allows usage of all keys for gameplay.
Supports up to 12 button joystick.
Assignable joystick functions:
  attack
  use
  autorun
  strafe
  jump
  look left
  look right
  
--------------------------------------

version 0.3.213 (Released 21/5/2007)
---------------
Corrected weapon positioning
if you have the chainsaw you can now change back to fist by pressing "1". Use -compatibilitymode to suspend this.
Option -mainwad from the command line to specify main wad file
Look up and down with z-axis shift
Added -nozaxisshift parameter to prevent z-axis shift 
Added -zaxisshift parameter to force z-axis shift 
Fixed lighttable calculation
Fixed demo recording and playback
Fixed doom2 end bug
Added PRINT SCREEN button for screenshoot, also creates up to 1000 screenshots.
Corrected the "endless" ironfeet bug 
Code: Now does not depend on Delphi's classes.pas unit, 
  TStringList class replaced by TDStringList class in d_delphi.pas unit
Added -compatibilitymode and -nocompatibilitymode cmd parameters for old compatibility mode
  -compatibilitymode -> Behaves as the original Doom (as possible)
  -nocompatibilitymode -> Use some new features


----------------------------------
Version 0.2 build 129 - (1/12/2005)
-----------------------------------
Now runs in 16 bit desktop in nofullscreen mode.
You can specify width and height from command line.

----------------------------------
Version 0.1 build 97 - (15/10/2005)
----------------------------------
Some bug fixes.
Now starts at 1024x768 fullscreen by default, still hardcoded. 

Version 0.09 build 82 - (16/2/2005)
-----------------------------------
Corrected weapon positioning. Support for midi files inside PWADS. Fixed support for high and low resolution.

Version 0.08 build 63 - (14/2/2005)
-----------------------------------

This is to be considered as the first version to be stable enough for gameplay.
Vile bug fixed. Full cheat support. Tested with DOOM2.WAD. Music now works!

Version 0.07 build 34 - (12/2/2005)
-----------------------------------
Lot of bug fixes. 
First implementation of cheats. 
First major successful test with shareware Doom Episode 1, should work with registered Doom and Doom2, as well as TNT and PLUTONIA. 
Added option to type -nofullscreen parameter in command line to prevent full screen. 
Now starts at 640x480 fullscreen by default, still hardcoded. 

Version 0.06 - (9/2/2005)
-----------------------------------
Most stuff for multi resolution support done. Just experiment with SCREENWIDTH and SCREENHEIGHT constants in doomdef.pas. 
Added icon and version info.

Version 0.05 - (8/2/2005)
-----------------------------------
Bug fixes, first step to support higher resolutions.

Version 0.04 - (7/2/2005)
-----------------------------------
First public release.

Version 0.03 - (6/2/2005)
-----------------------------------
DirectDraw support.

Version 0.02 - (30/1/2005)
-----------------------------------
DirectSound support.

Version 0.01 - (28/1/2005)
-----------------------------------
Finished Doom to Delphi initial conversion.

Version 0.0 - (28/12/2004)
-----------------------------------
Started Doom to Delphi initial conversion.

